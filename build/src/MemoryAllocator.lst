GAS LISTING /tmp/ccv0ov3L.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator8initHeapEv
   9              	_ZN15MemoryAllocator8initHeapEv:
  10              	.LFB0:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 10/7/25.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** 
   7:src/MemoryAllocator.cpp **** BlockHeader* MemoryAllocator::freeListHead = nullptr;
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** void MemoryAllocator::initHeap() {
  12              		.loc 1 9 34
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  10:src/MemoryAllocator.cpp ****     freeListHead = (BlockHeader*)HEAP_START_ADDR;
  20              		.loc 1 10 5
  21              		.loc 1 10 18 is_stmt 0
  22 000c 97060000 		la	a3,HEAP_START_ADDR
  22      83B60600 
  23 0014 83B70600 		ld	a5,0(a3)
  24 0018 17070000 		lla	a4,.LANCHOR0
  24      13070700 
  25 0020 2330F700 		sd	a5,0(a4)
  11:src/MemoryAllocator.cpp ****     freeListHead->next = nullptr;
  26              		.loc 1 11 5 is_stmt 1
  27              		.loc 1 11 24 is_stmt 0
  28 0024 23B00700 		sd	zero,0(a5)
  12:src/MemoryAllocator.cpp ****     freeListHead->size = (char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR;
  29              		.loc 1 12 5 is_stmt 1
  30              		.loc 1 12 26 is_stmt 0
  31 0028 97070000 		la	a5,HEAP_END_ADDR
  31      83B70700 
  32 0030 83B70700 		ld	a5,0(a5)
  33              		.loc 1 12 49
  34 0034 83B60600 		ld	a3,0(a3)
  35              		.loc 1 12 19
  36 0038 03370700 		ld	a4,0(a4)
  37              		.loc 1 12 47
  38 003c B387D740 		sub	a5,a5,a3
  39              		.loc 1 12 24
  40 0040 2334F700 		sd	a5,8(a4)
  13:src/MemoryAllocator.cpp **** }
  41              		.loc 1 13 1
  42 0044 03348100 		ld	s0,8(sp)
GAS LISTING /tmp/ccv0ov3L.s 			page 2


  43              		.cfi_restore 8
  44              		.cfi_def_cfa 2, 16
  45 0048 13010101 		addi	sp,sp,16
  46              		.cfi_def_cfa_offset 0
  47 004c 67800000 		jr	ra
  48              		.cfi_endproc
  49              	.LFE0:
  51              		.align	2
  52              		.globl	_ZN15MemoryAllocator9mem_allocEm
  54              	_ZN15MemoryAllocator9mem_allocEm:
  55              	.LFB1:
  14:src/MemoryAllocator.cpp **** 
  15:src/MemoryAllocator.cpp **** void* MemoryAllocator::mem_alloc(size_t blocks) {
  56              		.loc 1 15 49 is_stmt 1
  57              		.cfi_startproc
  58              	.LVL0:
  59 0050 130101FF 		addi	sp,sp,-16
  60              		.cfi_def_cfa_offset 16
  61 0054 23348100 		sd	s0,8(sp)
  62              		.cfi_offset 8, -8
  63 0058 13040101 		addi	s0,sp,16
  64              		.cfi_def_cfa 8, 0
  65 005c 93070500 		mv	a5,a0
  16:src/MemoryAllocator.cpp ****     if (!freeListHead || blocks == 0) return nullptr;
  66              		.loc 1 16 5
  67              		.loc 1 16 9 is_stmt 0
  68 0060 17050000 		ld	a0,.LANCHOR0
  68      03350500 
  69              	.LVL1:
  70              		.loc 1 16 5
  71 0068 63000506 		beqz	a0,.L3
  72              		.loc 1 16 23 discriminator 2
  73 006c 638A0708 		beqz	a5,.L12
  17:src/MemoryAllocator.cpp **** 
  18:src/MemoryAllocator.cpp ****     size_t sizeInBytes = blocks * MEM_BLOCK_SIZE;
  74              		.loc 1 18 5 is_stmt 1
  75              		.loc 1 18 12 is_stmt 0
  76 0070 93966700 		slli	a3,a5,6
  77              	.LVL2:
  19:src/MemoryAllocator.cpp ****     size_t totalSize = sizeInBytes + sizeof(BlockHeader);
  78              		.loc 1 19 5 is_stmt 1
  79              		.loc 1 19 12 is_stmt 0
  80 0074 13870601 		addi	a4,a3,16
  81              	.LVL3:
  20:src/MemoryAllocator.cpp **** 
  21:src/MemoryAllocator.cpp ****     BlockHeader* prev = nullptr;
  82              		.loc 1 21 5 is_stmt 1
  22:src/MemoryAllocator.cpp ****     BlockHeader* curr = freeListHead;
  83              		.loc 1 22 5
  21:src/MemoryAllocator.cpp ****     BlockHeader* curr = freeListHead;
  84              		.loc 1 21 18 is_stmt 0
  85 0078 13060000 		li	a2,0
  86 007c 6F00C000 		j	.L6
  87              	.LVL4:
  88              	.L14:
  23:src/MemoryAllocator.cpp **** 
  24:src/MemoryAllocator.cpp ****     while (curr && curr->size < totalSize) {
GAS LISTING /tmp/ccv0ov3L.s 			page 3


  25:src/MemoryAllocator.cpp ****         prev = curr;
  89              		.loc 1 25 9 is_stmt 1
  26:src/MemoryAllocator.cpp ****         curr = curr->next;
  90              		.loc 1 26 9
  25:src/MemoryAllocator.cpp ****         curr = curr->next;
  91              		.loc 1 25 14 is_stmt 0
  92 0080 13060500 		mv	a2,a0
  93              		.loc 1 26 14
  94 0084 03350500 		ld	a0,0(a0)
  95              	.LVL5:
  96              	.L6:
  24:src/MemoryAllocator.cpp ****         prev = curr;
  97              		.loc 1 24 5 is_stmt 1
  24:src/MemoryAllocator.cpp ****         prev = curr;
  98              		.loc 1 24 17
  99 0088 63060500 		beqz	a0,.L5
  24:src/MemoryAllocator.cpp ****         prev = curr;
 100              		.loc 1 24 26 is_stmt 0 discriminator 1
 101 008c 83378500 		ld	a5,8(a0)
  24:src/MemoryAllocator.cpp ****         prev = curr;
 102              		.loc 1 24 17 discriminator 1
 103 0090 E3E8E7FE 		bltu	a5,a4,.L14
 104              	.L5:
  27:src/MemoryAllocator.cpp ****     }
  28:src/MemoryAllocator.cpp **** 
  29:src/MemoryAllocator.cpp ****     if (!curr) return nullptr;
 105              		.loc 1 29 5 is_stmt 1
 106 0094 630A0502 		beqz	a0,.L3
  30:src/MemoryAllocator.cpp **** 
  31:src/MemoryAllocator.cpp ****     if (curr->size >= totalSize + sizeof(BlockHeader)) {
 107              		.loc 1 31 5
 108              	.LBB2:
 109              		.loc 1 31 15 is_stmt 0
 110 0098 83358500 		ld	a1,8(a0)
 111              		.loc 1 31 33
 112 009c 93870602 		addi	a5,a3,32
 113              		.loc 1 31 5
 114 00a0 63E0F504 		bltu	a1,a5,.L7
 115              	.LBB3:
  32:src/MemoryAllocator.cpp ****         BlockHeader* newBlock = (BlockHeader*)((char*)curr + totalSize);
 116              		.loc 1 32 9 is_stmt 1
 117              		.loc 1 32 22 is_stmt 0
 118 00a4 B307E500 		add	a5,a0,a4
 119              	.LVL6:
  33:src/MemoryAllocator.cpp ****         newBlock->size = curr->size - totalSize;
 120              		.loc 1 33 9 is_stmt 1
 121              		.loc 1 33 37 is_stmt 0
 122 00a8 B385E540 		sub	a1,a1,a4
 123              		.loc 1 33 24
 124 00ac 23B4B700 		sd	a1,8(a5)
  34:src/MemoryAllocator.cpp ****         newBlock->next = curr->next;
 125              		.loc 1 34 9 is_stmt 1
 126              		.loc 1 34 32 is_stmt 0
 127 00b0 83360500 		ld	a3,0(a0)
 128              	.LVL7:
 129              		.loc 1 34 24
 130 00b4 23B0D700 		sd	a3,0(a5)
GAS LISTING /tmp/ccv0ov3L.s 			page 4


  35:src/MemoryAllocator.cpp **** 
  36:src/MemoryAllocator.cpp ****         if (prev) prev->next = newBlock;
 131              		.loc 1 36 9 is_stmt 1
 132 00b8 630E0600 		beqz	a2,.L8
 133              		.loc 1 36 19 discriminator 1
 134              		.loc 1 36 30 is_stmt 0 discriminator 1
 135 00bc 2330F600 		sd	a5,0(a2)
 136              	.L9:
  37:src/MemoryAllocator.cpp ****         else freeListHead = newBlock;
  38:src/MemoryAllocator.cpp **** 
  39:src/MemoryAllocator.cpp ****         curr->size = totalSize;
 137              		.loc 1 39 9 is_stmt 1
 138              		.loc 1 39 20 is_stmt 0
 139 00c0 2334E500 		sd	a4,8(a0)
 140              	.LVL8:
 141              	.L10:
 142              	.LBE3:
 143              	.LBE2:
  40:src/MemoryAllocator.cpp ****     }
  41:src/MemoryAllocator.cpp ****     else {
  42:src/MemoryAllocator.cpp ****         if (prev) prev->next = curr->next;
  43:src/MemoryAllocator.cpp ****         else freeListHead = curr->next;
  44:src/MemoryAllocator.cpp ****     }
  45:src/MemoryAllocator.cpp **** 
  46:src/MemoryAllocator.cpp ****     return (char*)curr + sizeof(BlockHeader);
 144              		.loc 1 46 5 is_stmt 1
 145              		.loc 1 46 44 is_stmt 0
 146 00c4 13050501 		addi	a0,a0,16
 147              	.LVL9:
 148              	.L3:
  47:src/MemoryAllocator.cpp **** }
 149              		.loc 1 47 1
 150 00c8 03348100 		ld	s0,8(sp)
 151              		.cfi_remember_state
 152              		.cfi_restore 8
 153              		.cfi_def_cfa 2, 16
 154 00cc 13010101 		addi	sp,sp,16
 155              		.cfi_def_cfa_offset 0
 156 00d0 67800000 		jr	ra
 157              	.LVL10:
 158              	.L8:
 159              		.cfi_restore_state
 160              	.LBB5:
 161              	.LBB4:
  37:src/MemoryAllocator.cpp ****         else freeListHead = newBlock;
 162              		.loc 1 37 14 is_stmt 1
  37:src/MemoryAllocator.cpp ****         else freeListHead = newBlock;
 163              		.loc 1 37 27 is_stmt 0
 164 00d4 97060000 		sd	a5,.LANCHOR0,a3
 164      23B0F600 
 165 00dc 6FF05FFE 		j	.L9
 166              	.LVL11:
 167              	.L7:
 168              	.LBE4:
  42:src/MemoryAllocator.cpp ****         else freeListHead = curr->next;
 169              		.loc 1 42 9 is_stmt 1
 170 00e0 63080600 		beqz	a2,.L11
GAS LISTING /tmp/ccv0ov3L.s 			page 5


  42:src/MemoryAllocator.cpp ****         else freeListHead = curr->next;
 171              		.loc 1 42 19 discriminator 1
  42:src/MemoryAllocator.cpp ****         else freeListHead = curr->next;
 172              		.loc 1 42 38 is_stmt 0 discriminator 1
 173 00e4 83370500 		ld	a5,0(a0)
  42:src/MemoryAllocator.cpp ****         else freeListHead = curr->next;
 174              		.loc 1 42 30 discriminator 1
 175 00e8 2330F600 		sd	a5,0(a2)
 176 00ec 6FF09FFD 		j	.L10
 177              	.L11:
  43:src/MemoryAllocator.cpp ****     }
 178              		.loc 1 43 14 is_stmt 1
  43:src/MemoryAllocator.cpp ****     }
 179              		.loc 1 43 35 is_stmt 0
 180 00f0 83370500 		ld	a5,0(a0)
  43:src/MemoryAllocator.cpp ****     }
 181              		.loc 1 43 27
 182 00f4 17070000 		sd	a5,.LANCHOR0,a4
 182      2330F700 
 183              	.LVL12:
 184 00fc 6FF09FFC 		j	.L10
 185              	.LVL13:
 186              	.L12:
 187              	.LBE5:
  16:src/MemoryAllocator.cpp **** 
 188              		.loc 1 16 46
 189 0100 13050000 		li	a0,0
 190 0104 6FF05FFC 		j	.L3
 191              		.cfi_endproc
 192              	.LFE1:
 194              		.align	2
 195              		.globl	_ZN15MemoryAllocator9tryToJoinEP11BlockHeader
 197              	_ZN15MemoryAllocator9tryToJoinEP11BlockHeader:
 198              	.LFB3:
  48:src/MemoryAllocator.cpp **** 
  49:src/MemoryAllocator.cpp **** int MemoryAllocator::mem_free(void* addr) {
  50:src/MemoryAllocator.cpp ****     if (!addr) return -1;
  51:src/MemoryAllocator.cpp **** 
  52:src/MemoryAllocator.cpp ****     BlockHeader* blockToFree = (BlockHeader*)((char*)addr - sizeof(BlockHeader));
  53:src/MemoryAllocator.cpp **** 
  54:src/MemoryAllocator.cpp ****     if (!freeListHead) {
  55:src/MemoryAllocator.cpp ****         freeListHead = blockToFree;
  56:src/MemoryAllocator.cpp ****         freeListHead->next = nullptr;
  57:src/MemoryAllocator.cpp ****         return 0;
  58:src/MemoryAllocator.cpp ****     }
  59:src/MemoryAllocator.cpp **** 
  60:src/MemoryAllocator.cpp ****     BlockHeader* prev = nullptr;
  61:src/MemoryAllocator.cpp ****     BlockHeader* curr = freeListHead;
  62:src/MemoryAllocator.cpp **** 
  63:src/MemoryAllocator.cpp ****     while (curr && curr < blockToFree) {
  64:src/MemoryAllocator.cpp ****         prev = curr;
  65:src/MemoryAllocator.cpp ****         curr = curr->next;
  66:src/MemoryAllocator.cpp ****     }
  67:src/MemoryAllocator.cpp **** 
  68:src/MemoryAllocator.cpp ****     blockToFree->next = curr;
  69:src/MemoryAllocator.cpp ****     if (prev) prev->next = blockToFree;
  70:src/MemoryAllocator.cpp ****     else freeListHead = blockToFree;
GAS LISTING /tmp/ccv0ov3L.s 			page 6


  71:src/MemoryAllocator.cpp **** 
  72:src/MemoryAllocator.cpp ****     tryToJoin(blockToFree);
  73:src/MemoryAllocator.cpp ****     tryToJoin(prev);
  74:src/MemoryAllocator.cpp **** 
  75:src/MemoryAllocator.cpp ****     return 0;
  76:src/MemoryAllocator.cpp **** }
  77:src/MemoryAllocator.cpp **** 
  78:src/MemoryAllocator.cpp **** void MemoryAllocator::tryToJoin(BlockHeader* curr) {
 199              		.loc 1 78 52 is_stmt 1
 200              		.cfi_startproc
 201              	.LVL14:
 202 0108 130101FF 		addi	sp,sp,-16
 203              		.cfi_def_cfa_offset 16
 204 010c 23348100 		sd	s0,8(sp)
 205              		.cfi_offset 8, -8
 206 0110 13040101 		addi	s0,sp,16
 207              		.cfi_def_cfa 8, 0
  79:src/MemoryAllocator.cpp ****     if (!curr) return;
 208              		.loc 1 79 5
 209 0114 630C0500 		beqz	a0,.L15
  80:src/MemoryAllocator.cpp **** 
  81:src/MemoryAllocator.cpp ****     if (curr->next && (char*)curr + curr->size == (char*)(curr->next)) {
 210              		.loc 1 81 5
 211              		.loc 1 81 15 is_stmt 0
 212 0118 83370500 		ld	a5,0(a0)
 213              		.loc 1 81 5
 214 011c 63880700 		beqz	a5,.L15
 215              		.loc 1 81 43 discriminator 1
 216 0120 03378500 		ld	a4,8(a0)
 217              		.loc 1 81 35 discriminator 1
 218 0124 B306E500 		add	a3,a0,a4
 219              		.loc 1 81 20 discriminator 1
 220 0128 6388D700 		beq	a5,a3,.L18
 221              	.L15:
  82:src/MemoryAllocator.cpp ****         curr->size += curr->next->size;
  83:src/MemoryAllocator.cpp ****         curr->next = curr->next->next;
  84:src/MemoryAllocator.cpp ****     }
  85:src/MemoryAllocator.cpp **** }
 222              		.loc 1 85 1
 223 012c 03348100 		ld	s0,8(sp)
 224              		.cfi_remember_state
 225              		.cfi_restore 8
 226              		.cfi_def_cfa 2, 16
 227 0130 13010101 		addi	sp,sp,16
 228              		.cfi_def_cfa_offset 0
 229 0134 67800000 		jr	ra
 230              	.L18:
 231              		.cfi_restore_state
  82:src/MemoryAllocator.cpp ****         curr->size += curr->next->size;
 232              		.loc 1 82 9 is_stmt 1
  82:src/MemoryAllocator.cpp ****         curr->size += curr->next->size;
 233              		.loc 1 82 35 is_stmt 0
 234 0138 83B68700 		ld	a3,8(a5)
  82:src/MemoryAllocator.cpp ****         curr->size += curr->next->size;
 235              		.loc 1 82 20
 236 013c 3307D700 		add	a4,a4,a3
 237 0140 2334E500 		sd	a4,8(a0)
GAS LISTING /tmp/ccv0ov3L.s 			page 7


  83:src/MemoryAllocator.cpp ****     }
 238              		.loc 1 83 9 is_stmt 1
  83:src/MemoryAllocator.cpp ****     }
 239              		.loc 1 83 34 is_stmt 0
 240 0144 83B70700 		ld	a5,0(a5)
  83:src/MemoryAllocator.cpp ****     }
 241              		.loc 1 83 20
 242 0148 2330F500 		sd	a5,0(a0)
 243 014c 6FF01FFE 		j	.L15
 244              		.cfi_endproc
 245              	.LFE3:
 247              		.align	2
 248              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 250              	_ZN15MemoryAllocator8mem_freeEPv:
 251              	.LFB2:
  49:src/MemoryAllocator.cpp ****     if (!addr) return -1;
 252              		.loc 1 49 43 is_stmt 1
 253              		.cfi_startproc
 254              	.LVL15:
  50:src/MemoryAllocator.cpp **** 
 255              		.loc 1 50 5
 256 0150 630E0508 		beqz	a0,.L25
 257 0154 13070500 		mv	a4,a0
  52:src/MemoryAllocator.cpp **** 
 258              		.loc 1 52 5
  52:src/MemoryAllocator.cpp **** 
 259              		.loc 1 52 18 is_stmt 0
 260 0158 130505FF 		addi	a0,a0,-16
 261              	.LVL16:
  54:src/MemoryAllocator.cpp ****         freeListHead = blockToFree;
 262              		.loc 1 54 5 is_stmt 1
  54:src/MemoryAllocator.cpp ****         freeListHead = blockToFree;
 263              		.loc 1 54 9 is_stmt 0
 264 015c 97070000 		ld	a5,.LANCHOR0
 264      83B70700 
  54:src/MemoryAllocator.cpp ****         freeListHead = blockToFree;
 265              		.loc 1 54 5
 266 0164 63880702 		beqz	a5,.L30
  49:src/MemoryAllocator.cpp ****     if (!addr) return -1;
 267              		.loc 1 49 43
 268 0168 130101FE 		addi	sp,sp,-32
 269              		.cfi_def_cfa_offset 32
 270 016c 233C1100 		sd	ra,24(sp)
 271 0170 23388100 		sd	s0,16(sp)
 272 0174 23349100 		sd	s1,8(sp)
 273              		.cfi_offset 1, -8
 274              		.cfi_offset 8, -16
 275              		.cfi_offset 9, -24
 276 0178 13040102 		addi	s0,sp,32
 277              		.cfi_def_cfa 8, 0
  60:src/MemoryAllocator.cpp ****     BlockHeader* curr = freeListHead;
 278              		.loc 1 60 18
 279 017c 93040000 		li	s1,0
 280              	.L21:
 281              	.LVL17:
  63:src/MemoryAllocator.cpp ****         prev = curr;
 282              		.loc 1 63 5 is_stmt 1
GAS LISTING /tmp/ccv0ov3L.s 			page 8


  63:src/MemoryAllocator.cpp ****         prev = curr;
 283              		.loc 1 63 17
 284 0180 63840702 		beqz	a5,.L22
  63:src/MemoryAllocator.cpp ****         prev = curr;
 285              		.loc 1 63 17 is_stmt 0 discriminator 1
 286 0184 63F2A702 		bgeu	a5,a0,.L22
  64:src/MemoryAllocator.cpp ****         curr = curr->next;
 287              		.loc 1 64 9 is_stmt 1
 288              	.LVL18:
  65:src/MemoryAllocator.cpp ****     }
 289              		.loc 1 65 9
  64:src/MemoryAllocator.cpp ****         curr = curr->next;
 290              		.loc 1 64 14 is_stmt 0
 291 0188 93840700 		mv	s1,a5
  65:src/MemoryAllocator.cpp ****     }
 292              		.loc 1 65 14
 293 018c 83B70700 		ld	a5,0(a5)
 294              	.LVL19:
  63:src/MemoryAllocator.cpp ****         prev = curr;
 295              		.loc 1 63 5
 296 0190 6FF01FFF 		j	.L21
 297              	.LVL20:
 298              	.L30:
 299              		.cfi_def_cfa_register 2
 300              		.cfi_restore 1
 301              		.cfi_restore 8
 302              		.cfi_restore 9
  55:src/MemoryAllocator.cpp ****         freeListHead->next = nullptr;
 303              		.loc 1 55 9 is_stmt 1
  55:src/MemoryAllocator.cpp ****         freeListHead->next = nullptr;
 304              		.loc 1 55 22 is_stmt 0
 305 0194 97070000 		sd	a0,.LANCHOR0,a5
 305      23B0A700 
  56:src/MemoryAllocator.cpp ****         return 0;
 306              		.loc 1 56 9 is_stmt 1
  56:src/MemoryAllocator.cpp ****         return 0;
 307              		.loc 1 56 28 is_stmt 0
 308 019c 233807FE 		sd	zero,-16(a4)
  57:src/MemoryAllocator.cpp ****     }
 309              		.loc 1 57 9 is_stmt 1
  57:src/MemoryAllocator.cpp ****     }
 310              		.loc 1 57 16 is_stmt 0
 311 01a0 13050000 		li	a0,0
 312              	.LVL21:
 313 01a4 67800000 		ret
 314              	.LVL22:
 315              	.L22:
 316              		.cfi_def_cfa_register 8
 317              		.cfi_offset 1, -8
 318              		.cfi_offset 8, -16
 319              		.cfi_offset 9, -24
  68:src/MemoryAllocator.cpp ****     if (prev) prev->next = blockToFree;
 320              		.loc 1 68 5 is_stmt 1
  68:src/MemoryAllocator.cpp ****     if (prev) prev->next = blockToFree;
 321              		.loc 1 68 23 is_stmt 0
 322 01a8 2338F7FE 		sd	a5,-16(a4)
  69:src/MemoryAllocator.cpp ****     else freeListHead = blockToFree;
GAS LISTING /tmp/ccv0ov3L.s 			page 9


 323              		.loc 1 69 5 is_stmt 1
 324 01ac 638A0402 		beqz	s1,.L23
  69:src/MemoryAllocator.cpp ****     else freeListHead = blockToFree;
 325              		.loc 1 69 15 discriminator 1
  69:src/MemoryAllocator.cpp ****     else freeListHead = blockToFree;
 326              		.loc 1 69 26 is_stmt 0 discriminator 1
 327 01b0 23B0A400 		sd	a0,0(s1)
 328              	.LVL23:
 329              	.L24:
  72:src/MemoryAllocator.cpp ****     tryToJoin(prev);
 330              		.loc 1 72 5 is_stmt 1
  72:src/MemoryAllocator.cpp ****     tryToJoin(prev);
 331              		.loc 1 72 14 is_stmt 0
 332 01b4 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP11BlockHeader
 332      E7800000 
 333              	.LVL24:
  73:src/MemoryAllocator.cpp **** 
 334              		.loc 1 73 5 is_stmt 1
  73:src/MemoryAllocator.cpp **** 
 335              		.loc 1 73 14 is_stmt 0
 336 01bc 13850400 		mv	a0,s1
 337 01c0 97000000 		call	_ZN15MemoryAllocator9tryToJoinEP11BlockHeader
 337      E7800000 
 338              	.LVL25:
  75:src/MemoryAllocator.cpp **** }
 339              		.loc 1 75 5 is_stmt 1
  75:src/MemoryAllocator.cpp **** }
 340              		.loc 1 75 12 is_stmt 0
 341 01c8 13050000 		li	a0,0
  76:src/MemoryAllocator.cpp **** 
 342              		.loc 1 76 1
 343 01cc 83308101 		ld	ra,24(sp)
 344              		.cfi_remember_state
 345              		.cfi_restore 1
 346 01d0 03340101 		ld	s0,16(sp)
 347              		.cfi_restore 8
 348              		.cfi_def_cfa 2, 32
 349 01d4 83348100 		ld	s1,8(sp)
 350              		.cfi_restore 9
 351              	.LVL26:
 352 01d8 13010102 		addi	sp,sp,32
 353              		.cfi_def_cfa_offset 0
 354 01dc 67800000 		jr	ra
 355              	.LVL27:
 356              	.L23:
 357              		.cfi_restore_state
  70:src/MemoryAllocator.cpp **** 
 358              		.loc 1 70 10 is_stmt 1
  70:src/MemoryAllocator.cpp **** 
 359              		.loc 1 70 23 is_stmt 0
 360 01e0 97070000 		sd	a0,.LANCHOR0,a5
 360      23B0A700 
 361              	.LVL28:
 362 01e8 6FF0DFFC 		j	.L24
 363              	.LVL29:
 364              	.L25:
 365              		.cfi_def_cfa_register 2
GAS LISTING /tmp/ccv0ov3L.s 			page 10


 366              		.cfi_restore 1
 367              		.cfi_restore 8
 368              		.cfi_restore 9
  50:src/MemoryAllocator.cpp **** 
 369              		.loc 1 50 24
 370 01ec 1305F0FF 		li	a0,-1
 371              	.LVL30:
  76:src/MemoryAllocator.cpp **** 
 372              		.loc 1 76 1
 373 01f0 67800000 		ret
 374              		.cfi_endproc
 375              	.LFE2:
 377              		.align	2
 378              		.globl	_ZN15MemoryAllocator18mem_get_free_spaceEv
 380              	_ZN15MemoryAllocator18mem_get_free_spaceEv:
 381              	.LFB4:
  86:src/MemoryAllocator.cpp **** 
  87:src/MemoryAllocator.cpp **** size_t MemoryAllocator::mem_get_free_space() {
 382              		.loc 1 87 46 is_stmt 1
 383              		.cfi_startproc
 384 01f4 130101FF 		addi	sp,sp,-16
 385              		.cfi_def_cfa_offset 16
 386 01f8 23348100 		sd	s0,8(sp)
 387              		.cfi_offset 8, -8
 388 01fc 13040101 		addi	s0,sp,16
 389              		.cfi_def_cfa 8, 0
  88:src/MemoryAllocator.cpp ****     size_t total = 0;
 390              		.loc 1 88 5
 391              	.LVL31:
  89:src/MemoryAllocator.cpp **** 
  90:src/MemoryAllocator.cpp ****     for (BlockHeader* curr = freeListHead; curr; curr = curr->next) {
 392              		.loc 1 90 5
 393              	.LBB6:
 394              		.loc 1 90 23 is_stmt 0
 395 0200 97070000 		ld	a5,.LANCHOR0
 395      83B70700 
 396              	.LVL32:
 397              	.LBE6:
  88:src/MemoryAllocator.cpp ****     size_t total = 0;
 398              		.loc 1 88 12
 399 0208 13050000 		li	a0,0
 400 020c 6F008000 		j	.L34
 401              	.LVL33:
 402              	.L33:
 403              	.LBB7:
 404              		.loc 1 90 5 is_stmt 1 discriminator 2
 405              		.loc 1 90 55 is_stmt 0 discriminator 2
 406 0210 83B70700 		ld	a5,0(a5)
 407              	.LVL34:
 408              	.L34:
 409              		.loc 1 90 44 is_stmt 1 discriminator 1
 410 0214 638E0700 		beqz	a5,.L31
  91:src/MemoryAllocator.cpp ****         if (curr->size > sizeof(BlockHeader)) {
 411              		.loc 1 91 9
 412              		.loc 1 91 19 is_stmt 0
 413 0218 03B78700 		ld	a4,8(a5)
 414              		.loc 1 91 9
GAS LISTING /tmp/ccv0ov3L.s 			page 11


 415 021c 93060001 		li	a3,16
 416 0220 E3F8E6FE 		bleu	a4,a3,.L33
  92:src/MemoryAllocator.cpp ****             total += curr->size - sizeof(BlockHeader);
 417              		.loc 1 92 13 is_stmt 1
 418              		.loc 1 92 19 is_stmt 0
 419 0224 3305A700 		add	a0,a4,a0
 420              	.LVL35:
 421 0228 130505FF 		addi	a0,a0,-16
 422              	.LVL36:
 423 022c 6FF05FFE 		j	.L33
 424              	.L31:
 425              	.LBE7:
  93:src/MemoryAllocator.cpp ****         }
  94:src/MemoryAllocator.cpp ****     }
  95:src/MemoryAllocator.cpp **** 
  96:src/MemoryAllocator.cpp ****     return total;
  97:src/MemoryAllocator.cpp **** }
 426              		.loc 1 97 1
 427 0230 03348100 		ld	s0,8(sp)
 428              		.cfi_restore 8
 429              		.cfi_def_cfa 2, 16
 430 0234 13010101 		addi	sp,sp,16
 431              		.cfi_def_cfa_offset 0
 432 0238 67800000 		jr	ra
 433              		.cfi_endproc
 434              	.LFE4:
 436              		.align	2
 437              		.globl	_ZN15MemoryAllocator26mem_get_largest_free_blockEv
 439              	_ZN15MemoryAllocator26mem_get_largest_free_blockEv:
 440              	.LFB5:
  98:src/MemoryAllocator.cpp **** 
  99:src/MemoryAllocator.cpp **** size_t MemoryAllocator::mem_get_largest_free_block() {
 441              		.loc 1 99 54 is_stmt 1
 442              		.cfi_startproc
 443 023c 130101FF 		addi	sp,sp,-16
 444              		.cfi_def_cfa_offset 16
 445 0240 23348100 		sd	s0,8(sp)
 446              		.cfi_offset 8, -8
 447 0244 13040101 		addi	s0,sp,16
 448              		.cfi_def_cfa 8, 0
 100:src/MemoryAllocator.cpp ****     size_t largest = 0;
 449              		.loc 1 100 5
 450              	.LVL37:
 101:src/MemoryAllocator.cpp **** 
 102:src/MemoryAllocator.cpp ****     for (BlockHeader* curr = freeListHead; curr; curr = curr->next) {
 451              		.loc 1 102 5
 452              	.LBB8:
 453              		.loc 1 102 23 is_stmt 0
 454 0248 17070000 		ld	a4,.LANCHOR0
 454      03370700 
 455              	.LVL38:
 456              	.LBE8:
 100:src/MemoryAllocator.cpp ****     size_t largest = 0;
 457              		.loc 1 100 12
 458 0250 13050000 		li	a0,0
 459 0254 6F008000 		j	.L40
 460              	.LVL39:
GAS LISTING /tmp/ccv0ov3L.s 			page 12


 461              	.L39:
 462              	.LBB10:
 463              		.loc 1 102 5 is_stmt 1 discriminator 2
 464              		.loc 1 102 55 is_stmt 0 discriminator 2
 465 0258 03370700 		ld	a4,0(a4)
 466              	.LVL40:
 467              	.L40:
 468              		.loc 1 102 44 is_stmt 1 discriminator 1
 469 025c 63020702 		beqz	a4,.L36
 470              	.LBB9:
 103:src/MemoryAllocator.cpp ****         size_t usable = (curr->size > sizeof(BlockHeader)) ? curr->size - sizeof(BlockHeader) : 0;
 471              		.loc 1 103 9
 472              		.loc 1 103 32 is_stmt 0
 473 0260 83378700 		ld	a5,8(a4)
 474              		.loc 1 103 60
 475 0264 93060001 		li	a3,16
 476 0268 63F4D700 		bgeu	a5,a3,.L38
 477 026c 93070001 		li	a5,16
 478              	.L38:
 479              		.loc 1 103 16
 480 0270 938707FF 		addi	a5,a5,-16
 481              	.LVL41:
 104:src/MemoryAllocator.cpp ****         if (usable > largest) largest = usable;
 482              		.loc 1 104 9 is_stmt 1
 483 0274 E372F5FE 		bgeu	a0,a5,.L39
 484              		.loc 1 104 39 is_stmt 0
 485 0278 13850700 		mv	a0,a5
 486              	.LVL42:
 487 027c 6FF0DFFD 		j	.L39
 488              	.LVL43:
 489              	.L36:
 490              	.LBE9:
 491              	.LBE10:
 105:src/MemoryAllocator.cpp ****     }
 106:src/MemoryAllocator.cpp **** 
 107:src/MemoryAllocator.cpp ****     return largest;
 108:src/MemoryAllocator.cpp **** }...
 492              		.loc 1 108 1
 493 0280 03348100 		ld	s0,8(sp)
 494              		.cfi_restore 8
 495              		.cfi_def_cfa 2, 16
 496 0284 13010101 		addi	sp,sp,16
 497              		.cfi_def_cfa_offset 0
 498 0288 67800000 		jr	ra
 499              		.cfi_endproc
 500              	.LFE5:
 502              		.globl	_ZN15MemoryAllocator12freeListHeadE
 503              		.bss
 504              		.align	3
 505              		.set	.LANCHOR0,. + 0
 508              	_ZN15MemoryAllocator12freeListHeadE:
 509 0000 00000000 		.zero	8
 509      00000000 
 510              		.text
 511              	.Letext0:
 512              		.file 2 "src/../h/../lib/hw.h"
 513              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccv0ov3L.s 			page 13


GAS LISTING /tmp/ccv0ov3L.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccv0ov3L.s:9      .text:0000000000000000 _ZN15MemoryAllocator8initHeapEv
     /tmp/ccv0ov3L.s:13     .text:0000000000000000 .L0 
     /tmp/ccv0ov3L.s:14     .text:0000000000000000 .L0 
     /tmp/ccv0ov3L.s:15     .text:0000000000000004 .L0 
     /tmp/ccv0ov3L.s:17     .text:0000000000000008 .L0 
     /tmp/ccv0ov3L.s:19     .text:000000000000000c .L0 
     /tmp/ccv0ov3L.s:21     .text:000000000000000c .L0 
     /tmp/ccv0ov3L.s:22     .text:000000000000000c .L0 
     /tmp/ccv0ov3L.s:27     .text:0000000000000024 .L0 
     /tmp/ccv0ov3L.s:28     .text:0000000000000024 .L0 
     /tmp/ccv0ov3L.s:30     .text:0000000000000028 .L0 
     /tmp/ccv0ov3L.s:31     .text:0000000000000028 .L0 
     /tmp/ccv0ov3L.s:34     .text:0000000000000034 .L0 
     /tmp/ccv0ov3L.s:36     .text:0000000000000038 .L0 
     /tmp/ccv0ov3L.s:38     .text:000000000000003c .L0 
     /tmp/ccv0ov3L.s:40     .text:0000000000000040 .L0 
     /tmp/ccv0ov3L.s:42     .text:0000000000000044 .L0 
     /tmp/ccv0ov3L.s:43     .text:0000000000000048 .L0 
     /tmp/ccv0ov3L.s:44     .text:0000000000000048 .L0 
     /tmp/ccv0ov3L.s:46     .text:000000000000004c .L0 
     /tmp/ccv0ov3L.s:48     .text:0000000000000050 .L0 
     /tmp/ccv0ov3L.s:54     .text:0000000000000050 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccv0ov3L.s:57     .text:0000000000000050 .L0 
     /tmp/ccv0ov3L.s:59     .text:0000000000000050 .L0 
     /tmp/ccv0ov3L.s:60     .text:0000000000000054 .L0 
     /tmp/ccv0ov3L.s:62     .text:0000000000000058 .L0 
     /tmp/ccv0ov3L.s:64     .text:000000000000005c .L0 
     /tmp/ccv0ov3L.s:67     .text:0000000000000060 .L0 
     /tmp/ccv0ov3L.s:68     .text:0000000000000060 .L0 
     /tmp/ccv0ov3L.s:71     .text:0000000000000068 .L0 
     /tmp/ccv0ov3L.s:73     .text:000000000000006c .L0 
     /tmp/ccv0ov3L.s:75     .text:0000000000000070 .L0 
     /tmp/ccv0ov3L.s:76     .text:0000000000000070 .L0 
     /tmp/ccv0ov3L.s:79     .text:0000000000000074 .L0 
     /tmp/ccv0ov3L.s:80     .text:0000000000000074 .L0 
     /tmp/ccv0ov3L.s:83     .text:0000000000000078 .L0 
     /tmp/ccv0ov3L.s:84     .text:0000000000000078 .L0 
     /tmp/ccv0ov3L.s:85     .text:0000000000000078 .L0 
     /tmp/ccv0ov3L.s:90     .text:0000000000000080 .L0 
     /tmp/ccv0ov3L.s:91     .text:0000000000000080 .L0 
     /tmp/ccv0ov3L.s:92     .text:0000000000000080 .L0 
     /tmp/ccv0ov3L.s:94     .text:0000000000000084 .L0 
     /tmp/ccv0ov3L.s:98     .text:0000000000000088 .L0 
     /tmp/ccv0ov3L.s:99     .text:0000000000000088 .L0 
     /tmp/ccv0ov3L.s:101    .text:000000000000008c .L0 
     /tmp/ccv0ov3L.s:103    .text:0000000000000090 .L0 
     /tmp/ccv0ov3L.s:106    .text:0000000000000094 .L0 
     /tmp/ccv0ov3L.s:109    .text:0000000000000098 .L0 
     /tmp/ccv0ov3L.s:110    .text:0000000000000098 .L0 
     /tmp/ccv0ov3L.s:112    .text:000000000000009c .L0 
     /tmp/ccv0ov3L.s:114    .text:00000000000000a0 .L0 
     /tmp/ccv0ov3L.s:117    .text:00000000000000a4 .L0 
     /tmp/ccv0ov3L.s:118    .text:00000000000000a4 .L0 
     /tmp/ccv0ov3L.s:121    .text:00000000000000a8 .L0 
     /tmp/ccv0ov3L.s:122    .text:00000000000000a8 .L0 
GAS LISTING /tmp/ccv0ov3L.s 			page 15


     /tmp/ccv0ov3L.s:124    .text:00000000000000ac .L0 
     /tmp/ccv0ov3L.s:126    .text:00000000000000b0 .L0 
     /tmp/ccv0ov3L.s:127    .text:00000000000000b0 .L0 
     /tmp/ccv0ov3L.s:130    .text:00000000000000b4 .L0 
     /tmp/ccv0ov3L.s:132    .text:00000000000000b8 .L0 
     /tmp/ccv0ov3L.s:134    .text:00000000000000bc .L0 
     /tmp/ccv0ov3L.s:135    .text:00000000000000bc .L0 
     /tmp/ccv0ov3L.s:138    .text:00000000000000c0 .L0 
     /tmp/ccv0ov3L.s:139    .text:00000000000000c0 .L0 
     /tmp/ccv0ov3L.s:145    .text:00000000000000c4 .L0 
     /tmp/ccv0ov3L.s:146    .text:00000000000000c4 .L0 
     /tmp/ccv0ov3L.s:150    .text:00000000000000c8 .L0 
     /tmp/ccv0ov3L.s:151    .text:00000000000000cc .L0 
     /tmp/ccv0ov3L.s:152    .text:00000000000000cc .L0 
     /tmp/ccv0ov3L.s:153    .text:00000000000000cc .L0 
     /tmp/ccv0ov3L.s:155    .text:00000000000000d0 .L0 
     /tmp/ccv0ov3L.s:159    .text:00000000000000d4 .L0 
     /tmp/ccv0ov3L.s:163    .text:00000000000000d4 .L0 
     /tmp/ccv0ov3L.s:164    .text:00000000000000d4 .L0 
     /tmp/ccv0ov3L.s:170    .text:00000000000000e0 .L0 
     /tmp/ccv0ov3L.s:172    .text:00000000000000e4 .L0 
     /tmp/ccv0ov3L.s:173    .text:00000000000000e4 .L0 
     /tmp/ccv0ov3L.s:175    .text:00000000000000e8 .L0 
     /tmp/ccv0ov3L.s:179    .text:00000000000000f0 .L0 
     /tmp/ccv0ov3L.s:180    .text:00000000000000f0 .L0 
     /tmp/ccv0ov3L.s:182    .text:00000000000000f4 .L0 
     /tmp/ccv0ov3L.s:189    .text:0000000000000100 .L0 
     /tmp/ccv0ov3L.s:191    .text:0000000000000108 .L0 
     /tmp/ccv0ov3L.s:197    .text:0000000000000108 _ZN15MemoryAllocator9tryToJoinEP11BlockHeader
     /tmp/ccv0ov3L.s:200    .text:0000000000000108 .L0 
     /tmp/ccv0ov3L.s:202    .text:0000000000000108 .L0 
     /tmp/ccv0ov3L.s:203    .text:000000000000010c .L0 
     /tmp/ccv0ov3L.s:205    .text:0000000000000110 .L0 
     /tmp/ccv0ov3L.s:207    .text:0000000000000114 .L0 
     /tmp/ccv0ov3L.s:209    .text:0000000000000114 .L0 
     /tmp/ccv0ov3L.s:211    .text:0000000000000118 .L0 
     /tmp/ccv0ov3L.s:212    .text:0000000000000118 .L0 
     /tmp/ccv0ov3L.s:214    .text:000000000000011c .L0 
     /tmp/ccv0ov3L.s:216    .text:0000000000000120 .L0 
     /tmp/ccv0ov3L.s:218    .text:0000000000000124 .L0 
     /tmp/ccv0ov3L.s:220    .text:0000000000000128 .L0 
     /tmp/ccv0ov3L.s:223    .text:000000000000012c .L0 
     /tmp/ccv0ov3L.s:224    .text:0000000000000130 .L0 
     /tmp/ccv0ov3L.s:225    .text:0000000000000130 .L0 
     /tmp/ccv0ov3L.s:226    .text:0000000000000130 .L0 
     /tmp/ccv0ov3L.s:228    .text:0000000000000134 .L0 
     /tmp/ccv0ov3L.s:231    .text:0000000000000138 .L0 
     /tmp/ccv0ov3L.s:233    .text:0000000000000138 .L0 
     /tmp/ccv0ov3L.s:234    .text:0000000000000138 .L0 
     /tmp/ccv0ov3L.s:236    .text:000000000000013c .L0 
     /tmp/ccv0ov3L.s:239    .text:0000000000000144 .L0 
     /tmp/ccv0ov3L.s:240    .text:0000000000000144 .L0 
     /tmp/ccv0ov3L.s:242    .text:0000000000000148 .L0 
     /tmp/ccv0ov3L.s:244    .text:0000000000000150 .L0 
     /tmp/ccv0ov3L.s:250    .text:0000000000000150 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccv0ov3L.s:253    .text:0000000000000150 .L0 
     /tmp/ccv0ov3L.s:255    .text:0000000000000150 .L0 
GAS LISTING /tmp/ccv0ov3L.s 			page 16


     /tmp/ccv0ov3L.s:256    .text:0000000000000150 .L0 
     /tmp/ccv0ov3L.s:259    .text:0000000000000158 .L0 
     /tmp/ccv0ov3L.s:260    .text:0000000000000158 .L0 
     /tmp/ccv0ov3L.s:263    .text:000000000000015c .L0 
     /tmp/ccv0ov3L.s:264    .text:000000000000015c .L0 
     /tmp/ccv0ov3L.s:266    .text:0000000000000164 .L0 
     /tmp/ccv0ov3L.s:268    .text:0000000000000168 .L0 
     /tmp/ccv0ov3L.s:269    .text:000000000000016c .L0 
     /tmp/ccv0ov3L.s:273    .text:0000000000000178 .L0 
     /tmp/ccv0ov3L.s:274    .text:0000000000000178 .L0 
     /tmp/ccv0ov3L.s:275    .text:0000000000000178 .L0 
     /tmp/ccv0ov3L.s:277    .text:000000000000017c .L0 
     /tmp/ccv0ov3L.s:279    .text:000000000000017c .L0 
     /tmp/ccv0ov3L.s:283    .text:0000000000000180 .L0 
     /tmp/ccv0ov3L.s:284    .text:0000000000000180 .L0 
     /tmp/ccv0ov3L.s:286    .text:0000000000000184 .L0 
     /tmp/ccv0ov3L.s:289    .text:0000000000000188 .L0 
     /tmp/ccv0ov3L.s:290    .text:0000000000000188 .L0 
     /tmp/ccv0ov3L.s:291    .text:0000000000000188 .L0 
     /tmp/ccv0ov3L.s:293    .text:000000000000018c .L0 
     /tmp/ccv0ov3L.s:296    .text:0000000000000190 .L0 
     /tmp/ccv0ov3L.s:299    .text:0000000000000194 .L0 
     /tmp/ccv0ov3L.s:300    .text:0000000000000194 .L0 
     /tmp/ccv0ov3L.s:301    .text:0000000000000194 .L0 
     /tmp/ccv0ov3L.s:302    .text:0000000000000194 .L0 
     /tmp/ccv0ov3L.s:304    .text:0000000000000194 .L0 
     /tmp/ccv0ov3L.s:305    .text:0000000000000194 .L0 
     /tmp/ccv0ov3L.s:307    .text:000000000000019c .L0 
     /tmp/ccv0ov3L.s:308    .text:000000000000019c .L0 
     /tmp/ccv0ov3L.s:310    .text:00000000000001a0 .L0 
     /tmp/ccv0ov3L.s:311    .text:00000000000001a0 .L0 
     /tmp/ccv0ov3L.s:316    .text:00000000000001a8 .L0 
     /tmp/ccv0ov3L.s:317    .text:00000000000001a8 .L0 
     /tmp/ccv0ov3L.s:318    .text:00000000000001a8 .L0 
     /tmp/ccv0ov3L.s:319    .text:00000000000001a8 .L0 
     /tmp/ccv0ov3L.s:321    .text:00000000000001a8 .L0 
     /tmp/ccv0ov3L.s:322    .text:00000000000001a8 .L0 
     /tmp/ccv0ov3L.s:324    .text:00000000000001ac .L0 
     /tmp/ccv0ov3L.s:326    .text:00000000000001b0 .L0 
     /tmp/ccv0ov3L.s:327    .text:00000000000001b0 .L0 
     /tmp/ccv0ov3L.s:331    .text:00000000000001b4 .L0 
     /tmp/ccv0ov3L.s:332    .text:00000000000001b4 .L0 
     /tmp/ccv0ov3L.s:335    .text:00000000000001bc .L0 
     /tmp/ccv0ov3L.s:336    .text:00000000000001bc .L0 
     /tmp/ccv0ov3L.s:340    .text:00000000000001c8 .L0 
     /tmp/ccv0ov3L.s:341    .text:00000000000001c8 .L0 
     /tmp/ccv0ov3L.s:343    .text:00000000000001cc .L0 
     /tmp/ccv0ov3L.s:344    .text:00000000000001d0 .L0 
     /tmp/ccv0ov3L.s:345    .text:00000000000001d0 .L0 
     /tmp/ccv0ov3L.s:347    .text:00000000000001d4 .L0 
     /tmp/ccv0ov3L.s:348    .text:00000000000001d4 .L0 
     /tmp/ccv0ov3L.s:350    .text:00000000000001d8 .L0 
     /tmp/ccv0ov3L.s:353    .text:00000000000001dc .L0 
     /tmp/ccv0ov3L.s:357    .text:00000000000001e0 .L0 
     /tmp/ccv0ov3L.s:359    .text:00000000000001e0 .L0 
     /tmp/ccv0ov3L.s:360    .text:00000000000001e0 .L0 
     /tmp/ccv0ov3L.s:365    .text:00000000000001ec .L0 
GAS LISTING /tmp/ccv0ov3L.s 			page 17


     /tmp/ccv0ov3L.s:366    .text:00000000000001ec .L0 
     /tmp/ccv0ov3L.s:367    .text:00000000000001ec .L0 
     /tmp/ccv0ov3L.s:368    .text:00000000000001ec .L0 
     /tmp/ccv0ov3L.s:370    .text:00000000000001ec .L0 
     /tmp/ccv0ov3L.s:373    .text:00000000000001f0 .L0 
     /tmp/ccv0ov3L.s:374    .text:00000000000001f4 .L0 
     /tmp/ccv0ov3L.s:380    .text:00000000000001f4 _ZN15MemoryAllocator18mem_get_free_spaceEv
     /tmp/ccv0ov3L.s:383    .text:00000000000001f4 .L0 
     /tmp/ccv0ov3L.s:384    .text:00000000000001f4 .L0 
     /tmp/ccv0ov3L.s:385    .text:00000000000001f8 .L0 
     /tmp/ccv0ov3L.s:387    .text:00000000000001fc .L0 
     /tmp/ccv0ov3L.s:389    .text:0000000000000200 .L0 
     /tmp/ccv0ov3L.s:392    .text:0000000000000200 .L0 
     /tmp/ccv0ov3L.s:394    .text:0000000000000200 .L0 
     /tmp/ccv0ov3L.s:395    .text:0000000000000200 .L0 
     /tmp/ccv0ov3L.s:399    .text:0000000000000208 .L0 
     /tmp/ccv0ov3L.s:405    .text:0000000000000210 .L0 
     /tmp/ccv0ov3L.s:406    .text:0000000000000210 .L0 
     /tmp/ccv0ov3L.s:410    .text:0000000000000214 .L0 
     /tmp/ccv0ov3L.s:412    .text:0000000000000218 .L0 
     /tmp/ccv0ov3L.s:413    .text:0000000000000218 .L0 
     /tmp/ccv0ov3L.s:415    .text:000000000000021c .L0 
     /tmp/ccv0ov3L.s:418    .text:0000000000000224 .L0 
     /tmp/ccv0ov3L.s:419    .text:0000000000000224 .L0 
     /tmp/ccv0ov3L.s:427    .text:0000000000000230 .L0 
     /tmp/ccv0ov3L.s:428    .text:0000000000000234 .L0 
     /tmp/ccv0ov3L.s:429    .text:0000000000000234 .L0 
     /tmp/ccv0ov3L.s:431    .text:0000000000000238 .L0 
     /tmp/ccv0ov3L.s:433    .text:000000000000023c .L0 
     /tmp/ccv0ov3L.s:439    .text:000000000000023c _ZN15MemoryAllocator26mem_get_largest_free_blockEv
     /tmp/ccv0ov3L.s:442    .text:000000000000023c .L0 
     /tmp/ccv0ov3L.s:443    .text:000000000000023c .L0 
     /tmp/ccv0ov3L.s:444    .text:0000000000000240 .L0 
     /tmp/ccv0ov3L.s:446    .text:0000000000000244 .L0 
     /tmp/ccv0ov3L.s:448    .text:0000000000000248 .L0 
     /tmp/ccv0ov3L.s:451    .text:0000000000000248 .L0 
     /tmp/ccv0ov3L.s:453    .text:0000000000000248 .L0 
     /tmp/ccv0ov3L.s:454    .text:0000000000000248 .L0 
     /tmp/ccv0ov3L.s:458    .text:0000000000000250 .L0 
     /tmp/ccv0ov3L.s:464    .text:0000000000000258 .L0 
     /tmp/ccv0ov3L.s:465    .text:0000000000000258 .L0 
     /tmp/ccv0ov3L.s:469    .text:000000000000025c .L0 
     /tmp/ccv0ov3L.s:472    .text:0000000000000260 .L0 
     /tmp/ccv0ov3L.s:473    .text:0000000000000260 .L0 
     /tmp/ccv0ov3L.s:475    .text:0000000000000264 .L0 
     /tmp/ccv0ov3L.s:480    .text:0000000000000270 .L0 
     /tmp/ccv0ov3L.s:483    .text:0000000000000274 .L0 
     /tmp/ccv0ov3L.s:485    .text:0000000000000278 .L0 
     /tmp/ccv0ov3L.s:493    .text:0000000000000280 .L0 
     /tmp/ccv0ov3L.s:494    .text:0000000000000284 .L0 
     /tmp/ccv0ov3L.s:495    .text:0000000000000284 .L0 
     /tmp/ccv0ov3L.s:497    .text:0000000000000288 .L0 
     /tmp/ccv0ov3L.s:499    .text:000000000000028c .L0 
     /tmp/ccv0ov3L.s:508    .bss:0000000000000000 _ZN15MemoryAllocator12freeListHeadE
     /tmp/ccv0ov3L.s:505    .bss:0000000000000000 .LANCHOR0
     /tmp/ccv0ov3L.s:514    .text:000000000000028c .L0 
     /tmp/ccv0ov3L.s:22     .text:000000000000000c .L0 
GAS LISTING /tmp/ccv0ov3L.s 			page 18


     /tmp/ccv0ov3L.s:24     .text:0000000000000018 .L0 
     /tmp/ccv0ov3L.s:31     .text:0000000000000028 .L0 
     /tmp/ccv0ov3L.s:68     .text:0000000000000060 .L0 
     /tmp/ccv0ov3L.s:164    .text:00000000000000d4 .L0 
     /tmp/ccv0ov3L.s:182    .text:00000000000000f4 .L0 
     /tmp/ccv0ov3L.s:264    .text:000000000000015c .L0 
     /tmp/ccv0ov3L.s:305    .text:0000000000000194 .L0 
     /tmp/ccv0ov3L.s:360    .text:00000000000001e0 .L0 
     /tmp/ccv0ov3L.s:395    .text:0000000000000200 .L0 
     /tmp/ccv0ov3L.s:454    .text:0000000000000248 .L0 
     /tmp/ccv0ov3L.s:148    .text:00000000000000c8 .L3
     /tmp/ccv0ov3L.s:186    .text:0000000000000100 .L12
     /tmp/ccv0ov3L.s:96     .text:0000000000000088 .L6
     /tmp/ccv0ov3L.s:104    .text:0000000000000094 .L5
     /tmp/ccv0ov3L.s:88     .text:0000000000000080 .L14
     /tmp/ccv0ov3L.s:167    .text:00000000000000e0 .L7
     /tmp/ccv0ov3L.s:158    .text:00000000000000d4 .L8
     /tmp/ccv0ov3L.s:136    .text:00000000000000c0 .L9
     /tmp/ccv0ov3L.s:177    .text:00000000000000f0 .L11
     /tmp/ccv0ov3L.s:141    .text:00000000000000c4 .L10
     /tmp/ccv0ov3L.s:221    .text:000000000000012c .L15
     /tmp/ccv0ov3L.s:230    .text:0000000000000138 .L18
     /tmp/ccv0ov3L.s:364    .text:00000000000001ec .L25
     /tmp/ccv0ov3L.s:298    .text:0000000000000194 .L30
     /tmp/ccv0ov3L.s:315    .text:00000000000001a8 .L22
     /tmp/ccv0ov3L.s:280    .text:0000000000000180 .L21
     /tmp/ccv0ov3L.s:356    .text:00000000000001e0 .L23
     /tmp/ccv0ov3L.s:329    .text:00000000000001b4 .L24
     /tmp/ccv0ov3L.s:408    .text:0000000000000214 .L34
     /tmp/ccv0ov3L.s:424    .text:0000000000000230 .L31
     /tmp/ccv0ov3L.s:402    .text:0000000000000210 .L33
     /tmp/ccv0ov3L.s:467    .text:000000000000025c .L40
     /tmp/ccv0ov3L.s:489    .text:0000000000000280 .L36
     /tmp/ccv0ov3L.s:478    .text:0000000000000270 .L38
     /tmp/ccv0ov3L.s:461    .text:0000000000000258 .L39
     /tmp/ccv0ov3L.s:963    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccv0ov3L.s:1835   .debug_str:0000000000000166 .LASF39
     /tmp/ccv0ov3L.s:1857   .debug_str:00000000000002fc .LASF40
     /tmp/ccv0ov3L.s:1859   .debug_str:0000000000000314 .LASF41
     /tmp/ccv0ov3L.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccv0ov3L.s:511    .text:000000000000028c .Letext0
     /tmp/ccv0ov3L.s:1785   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccv0ov3L.s:1843   .debug_str:000000000000027f .LASF0
     /tmp/ccv0ov3L.s:1827   .debug_str:0000000000000134 .LASF1
     /tmp/ccv0ov3L.s:1823   .debug_str:0000000000000114 .LASF2
     /tmp/ccv0ov3L.s:1807   .debug_str:000000000000009c .LASF4
     /tmp/ccv0ov3L.s:1825   .debug_str:0000000000000122 .LASF3
     /tmp/ccv0ov3L.s:1793   .debug_str:0000000000000047 .LASF5
     /tmp/ccv0ov3L.s:1787   .debug_str:0000000000000000 .LASF6
     /tmp/ccv0ov3L.s:1817   .debug_str:00000000000000d1 .LASF7
     /tmp/ccv0ov3L.s:1849   .debug_str:00000000000002a3 .LASF8
     /tmp/ccv0ov3L.s:1805   .debug_str:000000000000008e .LASF9
     /tmp/ccv0ov3L.s:1883   .debug_str:00000000000003e2 .LASF10
     /tmp/ccv0ov3L.s:1819   .debug_str:00000000000000e4 .LASF11
     /tmp/ccv0ov3L.s:1875   .debug_str:00000000000003be .LASF12
     /tmp/ccv0ov3L.s:1847   .debug_str:0000000000000293 .LASF13
     /tmp/ccv0ov3L.s:1829   .debug_str:0000000000000147 .LASF14
GAS LISTING /tmp/ccv0ov3L.s 			page 19


     /tmp/ccv0ov3L.s:1813   .debug_str:00000000000000b6 .LASF15
     /tmp/ccv0ov3L.s:1853   .debug_str:00000000000002bb .LASF16
     /tmp/ccv0ov3L.s:1839   .debug_str:0000000000000245 .LASF19
     /tmp/ccv0ov3L.s:1795   .debug_str:000000000000004e .LASF17
     /tmp/ccv0ov3L.s:1879   .debug_str:00000000000003d8 .LASF18
     /tmp/ccv0ov3L.s:1791   .debug_str:0000000000000037 .LASF42
     /tmp/ccv0ov3L.s:1811   .debug_str:00000000000000ad .LASF43
     /tmp/ccv0ov3L.s:1797   .debug_str:0000000000000053 .LASF44
     /tmp/ccv0ov3L.s:1877   .debug_str:00000000000003ce .LASF20
     /tmp/ccv0ov3L.s:1869   .debug_str:000000000000038d .LASF22
     /tmp/ccv0ov3L.s:1861   .debug_str:0000000000000332 .LASF21
     /tmp/ccv0ov3L.s:1821   .debug_str:00000000000000f3 .LASF23
     /tmp/ccv0ov3L.s:1863   .debug_str:000000000000033b .LASF24
     /tmp/ccv0ov3L.s:1855   .debug_str:00000000000002d1 .LASF26
     /tmp/ccv0ov3L.s:1837   .debug_str:000000000000022a .LASF25
     /tmp/ccv0ov3L.s:1865   .debug_str:000000000000034e .LASF27
     /tmp/ccv0ov3L.s:1803   .debug_str:0000000000000081 .LASF45
     /tmp/ccv0ov3L.s:1873   .debug_str:00000000000003b4 .LASF46
     /tmp/ccv0ov3L.s:1841   .debug_str:0000000000000251 .LASF47
     /tmp/ccv0ov3L.s:1789   .debug_str:0000000000000013 .LASF48
     /tmp/ccv0ov3L.s:440    .text:000000000000023c .LFB5
     /tmp/ccv0ov3L.s:500    .text:000000000000028c .LFE5
     /tmp/ccv0ov3L.s:1851   .debug_str:00000000000002b3 .LASF28
     /tmp/ccv0ov3L.s:1466   .debug_loc:0000000000000000 .LLST11
     /tmp/ccv0ov3L.s:1765   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccv0ov3L.s:1799   .debug_str:0000000000000073 .LASF29
     /tmp/ccv0ov3L.s:470    .text:0000000000000260 .LBB9
     /tmp/ccv0ov3L.s:490    .text:0000000000000280 .LBE9
     /tmp/ccv0ov3L.s:1833   .debug_str:000000000000015f .LASF30
     /tmp/ccv0ov3L.s:1482   .debug_loc:000000000000004a .LLST12
     /tmp/ccv0ov3L.s:381    .text:00000000000001f4 .LFB4
     /tmp/ccv0ov3L.s:434    .text:000000000000023c .LFE4
     /tmp/ccv0ov3L.s:1871   .debug_str:00000000000003ae .LASF31
     /tmp/ccv0ov3L.s:1493   .debug_loc:0000000000000080 .LLST10
     /tmp/ccv0ov3L.s:198    .text:0000000000000108 .LFB3
     /tmp/ccv0ov3L.s:245    .text:0000000000000150 .LFE3
     /tmp/ccv0ov3L.s:251    .text:0000000000000150 .LFB2
     /tmp/ccv0ov3L.s:375    .text:00000000000001f4 .LFE2
     /tmp/ccv0ov3L.s:1815   .debug_str:00000000000000cc .LASF32
     /tmp/ccv0ov3L.s:1509   .debug_loc:00000000000000ca .LLST6
     /tmp/ccv0ov3L.s:1831   .debug_str:0000000000000153 .LASF33
     /tmp/ccv0ov3L.s:1542   .debug_loc:0000000000000152 .LLST7
     /tmp/ccv0ov3L.s:1881   .debug_str:00000000000003dd .LASF34
     /tmp/ccv0ov3L.s:1572   .debug_loc:00000000000001c8 .LLST8
     /tmp/ccv0ov3L.s:1595   .debug_loc:0000000000000237 .LLST9
     /tmp/ccv0ov3L.s:333    .text:00000000000001bc .LVL24
     /tmp/ccv0ov3L.s:338    .text:00000000000001c8 .LVL25
     /tmp/ccv0ov3L.s:55     .text:0000000000000050 .LFB1
     /tmp/ccv0ov3L.s:192    .text:0000000000000108 .LFE1
     /tmp/ccv0ov3L.s:1845   .debug_str:000000000000028c .LASF35
     /tmp/ccv0ov3L.s:1619   .debug_loc:00000000000002a7 .LLST0
     /tmp/ccv0ov3L.s:1867   .debug_str:0000000000000381 .LASF36
     /tmp/ccv0ov3L.s:1641   .debug_loc:0000000000000306 .LLST1
     /tmp/ccv0ov3L.s:1809   .debug_str:00000000000000a3 .LASF37
     /tmp/ccv0ov3L.s:1673   .debug_loc:000000000000037e .LLST2
     /tmp/ccv0ov3L.s:1701   .debug_loc:00000000000003e3 .LLST3
     /tmp/ccv0ov3L.s:1721   .debug_loc:0000000000000440 .LLST4
GAS LISTING /tmp/ccv0ov3L.s 			page 20


     /tmp/ccv0ov3L.s:1801   .debug_str:0000000000000078 .LASF38
     /tmp/ccv0ov3L.s:1741   .debug_loc:000000000000049d .LLST5
     /tmp/ccv0ov3L.s:10     .text:0000000000000000 .LFB0
     /tmp/ccv0ov3L.s:49     .text:0000000000000050 .LFE0
     /tmp/ccv0ov3L.s:450    .text:0000000000000248 .LVL37
     /tmp/ccv0ov3L.s:460    .text:0000000000000258 .LVL39
     /tmp/ccv0ov3L.s:486    .text:000000000000027c .LVL42
     /tmp/ccv0ov3L.s:488    .text:0000000000000280 .LVL43
     /tmp/ccv0ov3L.s:466    .text:000000000000025c .LVL40
     /tmp/ccv0ov3L.s:481    .text:0000000000000274 .LVL41
     /tmp/ccv0ov3L.s:391    .text:0000000000000200 .LVL31
     /tmp/ccv0ov3L.s:401    .text:0000000000000210 .LVL33
     /tmp/ccv0ov3L.s:420    .text:0000000000000228 .LVL35
     /tmp/ccv0ov3L.s:422    .text:000000000000022c .LVL36
     /tmp/ccv0ov3L.s:254    .text:0000000000000150 .LVL15
     /tmp/ccv0ov3L.s:261    .text:000000000000015c .LVL16
     /tmp/ccv0ov3L.s:355    .text:00000000000001e0 .LVL27
     /tmp/ccv0ov3L.s:363    .text:00000000000001ec .LVL29
     /tmp/ccv0ov3L.s:371    .text:00000000000001f0 .LVL30
     /tmp/ccv0ov3L.s:312    .text:00000000000001a4 .LVL21
     /tmp/ccv0ov3L.s:314    .text:00000000000001a8 .LVL22
     /tmp/ccv0ov3L.s:281    .text:0000000000000180 .LVL17
     /tmp/ccv0ov3L.s:288    .text:0000000000000188 .LVL18
     /tmp/ccv0ov3L.s:294    .text:0000000000000190 .LVL19
     /tmp/ccv0ov3L.s:297    .text:0000000000000194 .LVL20
     /tmp/ccv0ov3L.s:351    .text:00000000000001d8 .LVL26
     /tmp/ccv0ov3L.s:328    .text:00000000000001b4 .LVL23
     /tmp/ccv0ov3L.s:361    .text:00000000000001e8 .LVL28
     /tmp/ccv0ov3L.s:58     .text:0000000000000050 .LVL0
     /tmp/ccv0ov3L.s:69     .text:0000000000000068 .LVL1
     /tmp/ccv0ov3L.s:87     .text:0000000000000080 .LVL4
     /tmp/ccv0ov3L.s:185    .text:0000000000000100 .LVL13
     /tmp/ccv0ov3L.s:77     .text:0000000000000074 .LVL2
     /tmp/ccv0ov3L.s:128    .text:00000000000000b4 .LVL7
     /tmp/ccv0ov3L.s:140    .text:00000000000000c4 .LVL8
     /tmp/ccv0ov3L.s:147    .text:00000000000000c8 .LVL9
     /tmp/ccv0ov3L.s:157    .text:00000000000000d4 .LVL10
     /tmp/ccv0ov3L.s:166    .text:00000000000000e0 .LVL11
     /tmp/ccv0ov3L.s:81     .text:0000000000000078 .LVL3
     /tmp/ccv0ov3L.s:183    .text:00000000000000fc .LVL12
     /tmp/ccv0ov3L.s:95     .text:0000000000000088 .LVL5
     /tmp/ccv0ov3L.s:119    .text:00000000000000a8 .LVL6
     /tmp/ccv0ov3L.s:515    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccv0ov3L.s:115    .text:00000000000000a4 .LBB3
     /tmp/ccv0ov3L.s:142    .text:00000000000000c4 .LBE3
     /tmp/ccv0ov3L.s:161    .text:00000000000000d4 .LBB4
     /tmp/ccv0ov3L.s:168    .text:00000000000000e0 .LBE4
     /tmp/ccv0ov3L.s:393    .text:0000000000000200 .LBB6
     /tmp/ccv0ov3L.s:397    .text:0000000000000208 .LBE6
     /tmp/ccv0ov3L.s:403    .text:0000000000000210 .LBB7
     /tmp/ccv0ov3L.s:425    .text:0000000000000230 .LBE7
     /tmp/ccv0ov3L.s:452    .text:0000000000000248 .LBB8
     /tmp/ccv0ov3L.s:456    .text:0000000000000250 .LBE8
     /tmp/ccv0ov3L.s:462    .text:0000000000000258 .LBB10
     /tmp/ccv0ov3L.s:491    .text:0000000000000280 .LBE10

UNDEFINED SYMBOLS
GAS LISTING /tmp/ccv0ov3L.s 			page 21


HEAP_START_ADDR
HEAP_END_ADDR
