GAS LISTING /tmp/ccCX7qXW.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z11userWrapperPv
   9              	_Z11userWrapperPv:
  10              	.LFB22:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/MemoryAllocator.hpp"
   2:src/main.cpp  **** #include "../h/Riscv.hpp"
   3:src/main.cpp  **** #include "../h/Scheduler.hpp"
   4:src/main.cpp  **** #include "../h/syscall_c.hpp"
   5:src/main.cpp  **** #include "../h/KThread.hpp"
   6:src/main.cpp  **** 
   7:src/main.cpp  **** uint64 framePointer;
   8:src/main.cpp  **** 
   9:src/main.cpp  **** void userMain();
  10:src/main.cpp  **** void userWrapper(void* arg) {
  12              		.loc 1 10 29
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23341100 		sd	ra,8(sp)
  18 0008 23308100 		sd	s0,0(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21 000c 13040101 		addi	s0,sp,16
  22              		.cfi_def_cfa 8, 0
  11:src/main.cpp  ****     userMain();
  23              		.loc 1 11 5
  24              		.loc 1 11 13 is_stmt 0
  25 0010 97000000 		call	_Z8userMainv@plt
  25      E7800000 
  26              	.LVL1:
  12:src/main.cpp  **** }
  27              		.loc 1 12 1
  28 0018 83308100 		ld	ra,8(sp)
  29              		.cfi_restore 1
  30 001c 03340100 		ld	s0,0(sp)
  31              		.cfi_restore 8
  32              		.cfi_def_cfa 2, 16
  33 0020 13010101 		addi	sp,sp,16
  34              		.cfi_def_cfa_offset 0
  35 0024 67800000 		jr	ra
  36              		.cfi_endproc
  37              	.LFE22:
  39              		.align	2
  40              		.globl	main
  42              	main:
  43              	.LFB23:
  13:src/main.cpp  **** 
  14:src/main.cpp  **** void main() {
  44              		.loc 1 14 13 is_stmt 1
  45              		.cfi_startproc
GAS LISTING /tmp/ccCX7qXW.s 			page 2


  46 0028 130101FE 		addi	sp,sp,-32
  47              		.cfi_def_cfa_offset 32
  48 002c 233C1100 		sd	ra,24(sp)
  49 0030 23388100 		sd	s0,16(sp)
  50              		.cfi_offset 1, -8
  51              		.cfi_offset 8, -16
  52 0034 13040102 		addi	s0,sp,32
  53              		.cfi_def_cfa 8, 0
  15:src/main.cpp  ****     MemoryAllocator::initHeap();
  54              		.loc 1 15 5
  55              		.loc 1 15 30 is_stmt 0
  56 0038 97000000 		call	_ZN15MemoryAllocator8initHeapEv@plt
  56      E7800000 
  57              	.LVL2:
  16:src/main.cpp  ****     Riscv::setupTrapHandler();
  58              		.loc 1 16 5 is_stmt 1
  59              		.loc 1 16 28 is_stmt 0
  60 0040 97000000 		call	_ZN5Riscv16setupTrapHandlerEv@plt
  60      E7800000 
  61              	.LVL3:
  17:src/main.cpp  **** 
  18:src/main.cpp  ****     thread_t mainThread, userBody;
  62              		.loc 1 18 5 is_stmt 1
  19:src/main.cpp  **** 
  20:src/main.cpp  ****     mainThread = KThread::createThread(nullptr, nullptr, nullptr);
  63              		.loc 1 20 5
  64              		.loc 1 20 39 is_stmt 0
  65 0048 13060000 		li	a2,0
  66 004c 93050000 		li	a1,0
  67 0050 13050000 		li	a0,0
  68 0054 97000000 		call	_ZN7KThread12createThreadEPFvPvES0_S0_@plt
  68      E7800000 
  69              	.LVL4:
  21:src/main.cpp  ****     KThread::running = mainThread;
  70              		.loc 1 21 5 is_stmt 1
  71              		.loc 1 21 22 is_stmt 0
  72 005c 97070000 		la	a5,_ZN7KThread7runningE
  72      83B70700 
  73 0064 23B0A700 		sd	a0,0(a5)
  22:src/main.cpp  ****     mainThread->setState(RUNNING);
  74              		.loc 1 22 5 is_stmt 1
  75              	.LVL5:
  76              	.LBB6:
  77              	.LBB7:
  78              		.file 2 "src/../h/KThread.hpp"
   1:src/../h/KThread.hpp **** //
   2:src/../h/KThread.hpp **** // Created by os on 10/8/25.
   3:src/../h/KThread.hpp **** //
   4:src/../h/KThread.hpp **** 
   5:src/../h/KThread.hpp **** #ifndef PROJECT_BASE_THREAD_HPP
   6:src/../h/KThread.hpp **** #define PROJECT_BASE_THREAD_HPP
   7:src/../h/KThread.hpp **** 
   8:src/../h/KThread.hpp **** #include "MemoryAllocator.hpp"
   9:src/../h/KThread.hpp **** #include "../lib/hw.h"
  10:src/../h/KThread.hpp **** 
  11:src/../h/KThread.hpp **** enum ThreadState {
  12:src/../h/KThread.hpp ****     NEW,
GAS LISTING /tmp/ccCX7qXW.s 			page 3


  13:src/../h/KThread.hpp ****     READY,
  14:src/../h/KThread.hpp ****     RUNNING,
  15:src/../h/KThread.hpp ****     BLOCKED,
  16:src/../h/KThread.hpp ****     FINISHED
  17:src/../h/KThread.hpp **** };
  18:src/../h/KThread.hpp **** 
  19:src/../h/KThread.hpp **** class KThread {
  20:src/../h/KThread.hpp **** public:
  21:src/../h/KThread.hpp ****     static int staticId;
  22:src/../h/KThread.hpp ****     static KThread* running;
  23:src/../h/KThread.hpp **** 
  24:src/../h/KThread.hpp ****     friend class Scheduler;
  25:src/../h/KThread.hpp ****     friend class KSemaphore;
  26:src/../h/KThread.hpp **** 
  27:src/../h/KThread.hpp ****     using Body = void(*)(void*);
  28:src/../h/KThread.hpp **** 
  29:src/../h/KThread.hpp ****     ~KThread();
  30:src/../h/KThread.hpp **** 
  31:src/../h/KThread.hpp ****     static KThread* createThread(Body, void*, void*);
  32:src/../h/KThread.hpp ****     static KThread* createThread(Body);
  33:src/../h/KThread.hpp **** 
  34:src/../h/KThread.hpp ****     void start();                       // prepare and put in the Scheduler
  35:src/../h/KThread.hpp ****     void exit();                        // mark as finished (could be called from wrapper)
  36:src/../h/KThread.hpp ****     static void wrapper();              // static function - entry which calls body(arg) and exit
  37:src/../h/KThread.hpp **** 
  38:src/../h/KThread.hpp ****     ThreadState getState() const { return state; }
  39:src/../h/KThread.hpp ****     void setState(ThreadState s) { state = s; }
  79              		.loc 2 39 36
  80              		.loc 2 39 42 is_stmt 0
  81 0068 93072000 		li	a5,2
  82 006c 2328F502 		sw	a5,48(a0)
  83              	.LVL6:
  84              	.LBE7:
  85              	.LBE6:
  23:src/main.cpp  **** 
  24:src/main.cpp  ****     Riscv::setUserMode();
  86              		.loc 1 24 5 is_stmt 1
  87              		.loc 1 24 23 is_stmt 0
  88 0070 97000000 		call	_ZN5Riscv11setUserModeEv@plt
  88      E7800000 
  89              	.LVL7:
  25:src/main.cpp  **** 
  26:src/main.cpp  ****     thread_create(&userBody, &userWrapper, nullptr);
  90              		.loc 1 26 5 is_stmt 1
  91              		.loc 1 26 18 is_stmt 0
  92 0078 13060000 		li	a2,0
  93 007c 97050000 		lla	a1,_Z11userWrapperPv
  93      93850500 
  94 0084 130584FE 		addi	a0,s0,-24
  95 0088 97000000 		call	_Z13thread_createPP7KThreadPFvPvES2_@plt
  95      E7800000 
  96              	.LVL8:
  27:src/main.cpp  **** 
  28:src/main.cpp  ****     Riscv::ms_sstatus(0x02);
  97              		.loc 1 28 5 is_stmt 1
  98              	.LBB8:
  99              	.LBB9:
GAS LISTING /tmp/ccCX7qXW.s 			page 4


 100              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 10/7/25.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** 
  10:src/../h/Riscv.hpp **** extern uint64 framePointer;
  11:src/../h/Riscv.hpp **** extern "C" void trap_handler();
  12:src/../h/Riscv.hpp **** 
  13:src/../h/Riscv.hpp **** class Riscv {
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void setupTrapHandler();
  16:src/../h/Riscv.hpp ****     static void trapHandler();
  17:src/../h/Riscv.hpp **** 
  18:src/../h/Riscv.hpp ****     static void setUserMode();
  19:src/../h/Riscv.hpp ****     static void setKernelMode();
  20:src/../h/Riscv.hpp ****     static bool isUserMode();
  21:src/../h/Riscv.hpp ****     static void returnToUser();
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void popSppSpie();
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static uint64 r_scause();
  26:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  29:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  32:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  33:src/../h/Riscv.hpp **** 
  34:src/../h/Riscv.hpp ****     static uint64 r_stval();
  35:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  38:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  39:src/../h/Riscv.hpp ****     static uint64 r_sip();
  40:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  43:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  44:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  45:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     enum BitMaskSip
  48:src/../h/Riscv.hpp ****     {
  49:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  50:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  51:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  52:src/../h/Riscv.hpp ****     };
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  55:src/../h/Riscv.hpp ****     {
  56:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
GAS LISTING /tmp/ccCX7qXW.s 			page 5


  57:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  58:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  59:src/../h/Riscv.hpp ****     };
  60:src/../h/Riscv.hpp **** };
  61:src/../h/Riscv.hpp **** 
  62:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  63:src/../h/Riscv.hpp ****     uint64 volatile scause;
  64:src/../h/Riscv.hpp ****     asm volatile("csrr %0, scause" : "=r"(scause));
  65:src/../h/Riscv.hpp ****     return scause;
  66:src/../h/Riscv.hpp **** }
  67:src/../h/Riscv.hpp **** 
  68:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  69:src/../h/Riscv.hpp ****     asm volatile("csrw scause, %0" :: "r"(scause));
  70:src/../h/Riscv.hpp **** }
  71:src/../h/Riscv.hpp **** 
  72:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  73:src/../h/Riscv.hpp ****     uint64 volatile sepc;
  74:src/../h/Riscv.hpp ****     asm volatile("csrr %0, sepc" : "=r"(sepc));
  75:src/../h/Riscv.hpp ****     return sepc;
  76:src/../h/Riscv.hpp **** }
  77:src/../h/Riscv.hpp **** 
  78:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  79:src/../h/Riscv.hpp ****     asm volatile("csrw sepc, %0" :: "r"(sepc));
  80:src/../h/Riscv.hpp **** }
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
  83:src/../h/Riscv.hpp ****     uint64 volatile stvec;
  84:src/../h/Riscv.hpp ****     asm volatile("csrr %0, stvec" : "=r"(stvec));
  85:src/../h/Riscv.hpp ****     return stvec;
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
  89:src/../h/Riscv.hpp ****     asm volatile("csrw stvec, %0" :: "r"(stvec));
  90:src/../h/Riscv.hpp **** }
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
  93:src/../h/Riscv.hpp ****     uint64 volatile stval;
  94:src/../h/Riscv.hpp ****     asm volatile("csrr %0, stval" : "=r"(stval));
  95:src/../h/Riscv.hpp ****     return stval;
  96:src/../h/Riscv.hpp **** }
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
  99:src/../h/Riscv.hpp ****     asm volatile("csrw stval, %0" :: "r"(stval));
 100:src/../h/Riscv.hpp **** }
 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 103:src/../h/Riscv.hpp ****     asm volatile("csrs sip, %0" :: "r"(mask));
 104:src/../h/Riscv.hpp **** }
 105:src/../h/Riscv.hpp **** 
 106:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 107:src/../h/Riscv.hpp ****     asm volatile("csrc sip, %0" :: "r"(mask));
 108:src/../h/Riscv.hpp **** }
 109:src/../h/Riscv.hpp **** 
 110:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 111:src/../h/Riscv.hpp ****     uint64 volatile sip;
 112:src/../h/Riscv.hpp ****     asm volatile("csrr %0, sip" : "=r"(sip));
 113:src/../h/Riscv.hpp ****     return sip;
GAS LISTING /tmp/ccCX7qXW.s 			page 6


 114:src/../h/Riscv.hpp **** }
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 117:src/../h/Riscv.hpp ****     asm volatile("csrw sip, %0" :: "r"(sip));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 121:src/../h/Riscv.hpp ****     asm volatile("csrs sstatus, %0" :: "r"(mask));
 101              		.loc 3 121 5
 102              		.loc 3 121 50 is_stmt 0
 103 0090 93072000 		li	a5,2
 104              	#APP
 105              	# 121 "src/../h/Riscv.hpp" 1
 122              	}
 106              		csrs sstatus, a5
 107              	# 0 "" 2
 108              	.LVL9:
 109              	#NO_APP
 110              	.L5:
 111              	.LBE9:
 112              	.LBE8:
  29:src/main.cpp  **** 
  30:src/main.cpp  ****     while (!Scheduler::isEmpty()) {
 113              		.loc 1 30 5 is_stmt 1
 114              		.loc 1 30 12
 115              		.loc 1 30 31 is_stmt 0
 116 0098 97000000 		call	_ZN9Scheduler7isEmptyEv@plt
 116      E7800000 
 117              	.LVL10:
 118              		.loc 1 30 12
 119 00a0 63180500 		bnez	a0,.L3
  31:src/main.cpp  ****         KThread::yield();
 120              		.loc 1 31 9 is_stmt 1
 121              		.loc 1 31 23 is_stmt 0
 122 00a4 97000000 		call	_ZN7KThread5yieldEv@plt
 122      E7800000 
 123              	.LVL11:
 124 00ac 6FF0DFFE 		j	.L5
 125              	.L3:
  32:src/main.cpp  ****     }
  33:src/main.cpp  **** 
  34:src/main.cpp  **** }...
 126              		.loc 1 34 1
 127 00b0 83308101 		ld	ra,24(sp)
 128              		.cfi_restore 1
 129 00b4 03340101 		ld	s0,16(sp)
 130              		.cfi_restore 8
 131              		.cfi_def_cfa 2, 32
 132 00b8 13010102 		addi	sp,sp,32
 133              		.cfi_def_cfa_offset 0
 134 00bc 67800000 		jr	ra
 135              		.cfi_endproc
 136              	.LFE23:
 138              		.globl	framePointer
 139              		.bss
 140              		.align	3
 143              	framePointer:
GAS LISTING /tmp/ccCX7qXW.s 			page 7


 144 0000 00000000 		.zero	8
 144      00000000 
 145              		.text
 146              	.Letext0:
 147              		.file 4 "src/../h/../lib/hw.h"
 148              		.file 5 "src/../h/MemoryAllocator.hpp"
 149              		.file 6 "src/../h/Scheduler.hpp"
 150              		.file 7 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccCX7qXW.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccCX7qXW.s:9      .text:0000000000000000 _Z11userWrapperPv
     /tmp/ccCX7qXW.s:13     .text:0000000000000000 .L0 
     /tmp/ccCX7qXW.s:15     .text:0000000000000000 .L0 
     /tmp/ccCX7qXW.s:16     .text:0000000000000004 .L0 
     /tmp/ccCX7qXW.s:19     .text:000000000000000c .L0 
     /tmp/ccCX7qXW.s:20     .text:000000000000000c .L0 
     /tmp/ccCX7qXW.s:22     .text:0000000000000010 .L0 
     /tmp/ccCX7qXW.s:24     .text:0000000000000010 .L0 
     /tmp/ccCX7qXW.s:25     .text:0000000000000010 .L0 
     /tmp/ccCX7qXW.s:28     .text:0000000000000018 .L0 
     /tmp/ccCX7qXW.s:29     .text:000000000000001c .L0 
     /tmp/ccCX7qXW.s:31     .text:0000000000000020 .L0 
     /tmp/ccCX7qXW.s:32     .text:0000000000000020 .L0 
     /tmp/ccCX7qXW.s:34     .text:0000000000000024 .L0 
     /tmp/ccCX7qXW.s:36     .text:0000000000000028 .L0 
     /tmp/ccCX7qXW.s:42     .text:0000000000000028 main
     /tmp/ccCX7qXW.s:45     .text:0000000000000028 .L0 
     /tmp/ccCX7qXW.s:46     .text:0000000000000028 .L0 
     /tmp/ccCX7qXW.s:47     .text:000000000000002c .L0 
     /tmp/ccCX7qXW.s:50     .text:0000000000000034 .L0 
     /tmp/ccCX7qXW.s:51     .text:0000000000000034 .L0 
     /tmp/ccCX7qXW.s:53     .text:0000000000000038 .L0 
     /tmp/ccCX7qXW.s:55     .text:0000000000000038 .L0 
     /tmp/ccCX7qXW.s:56     .text:0000000000000038 .L0 
     /tmp/ccCX7qXW.s:59     .text:0000000000000040 .L0 
     /tmp/ccCX7qXW.s:60     .text:0000000000000040 .L0 
     /tmp/ccCX7qXW.s:63     .text:0000000000000048 .L0 
     /tmp/ccCX7qXW.s:64     .text:0000000000000048 .L0 
     /tmp/ccCX7qXW.s:65     .text:0000000000000048 .L0 
     /tmp/ccCX7qXW.s:71     .text:000000000000005c .L0 
     /tmp/ccCX7qXW.s:72     .text:000000000000005c .L0 
     /tmp/ccCX7qXW.s:79     .text:0000000000000068 .L0 
     /tmp/ccCX7qXW.s:80     .text:0000000000000068 .L0 
     /tmp/ccCX7qXW.s:81     .text:0000000000000068 .L0 
     /tmp/ccCX7qXW.s:87     .text:0000000000000070 .L0 
     /tmp/ccCX7qXW.s:88     .text:0000000000000070 .L0 
     /tmp/ccCX7qXW.s:91     .text:0000000000000078 .L0 
     /tmp/ccCX7qXW.s:92     .text:0000000000000078 .L0 
     /tmp/ccCX7qXW.s:101    .text:0000000000000090 .L0 
     /tmp/ccCX7qXW.s:102    .text:0000000000000090 .L0 
     /tmp/ccCX7qXW.s:103    .text:0000000000000090 .L0 
     /tmp/ccCX7qXW.s:114    .text:0000000000000098 .L0 
     /tmp/ccCX7qXW.s:115    .text:0000000000000098 .L0 
     /tmp/ccCX7qXW.s:116    .text:0000000000000098 .L0 
     /tmp/ccCX7qXW.s:119    .text:00000000000000a0 .L0 
     /tmp/ccCX7qXW.s:121    .text:00000000000000a4 .L0 
     /tmp/ccCX7qXW.s:122    .text:00000000000000a4 .L0 
     /tmp/ccCX7qXW.s:127    .text:00000000000000b0 .L0 
     /tmp/ccCX7qXW.s:128    .text:00000000000000b4 .L0 
     /tmp/ccCX7qXW.s:130    .text:00000000000000b8 .L0 
     /tmp/ccCX7qXW.s:131    .text:00000000000000b8 .L0 
     /tmp/ccCX7qXW.s:133    .text:00000000000000bc .L0 
     /tmp/ccCX7qXW.s:135    .text:00000000000000c0 .L0 
     /tmp/ccCX7qXW.s:143    .bss:0000000000000000 framePointer
     /tmp/ccCX7qXW.s:151    .text:00000000000000c0 .L0 
GAS LISTING /tmp/ccCX7qXW.s 			page 9


     /tmp/ccCX7qXW.s:72     .text:000000000000005c .L0 
     /tmp/ccCX7qXW.s:93     .text:000000000000007c .L0 
     /tmp/ccCX7qXW.s:125    .text:00000000000000b0 .L3
     /tmp/ccCX7qXW.s:110    .text:0000000000000098 .L5
     /tmp/ccCX7qXW.s:1223   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccCX7qXW.s:2404   .debug_str:0000000000000788 .LASF148
     /tmp/ccCX7qXW.s:2290   .debug_str:000000000000043b .LASF149
     /tmp/ccCX7qXW.s:2242   .debug_str:000000000000028b .LASF150
     /tmp/ccCX7qXW.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccCX7qXW.s:146    .text:00000000000000c0 .Letext0
     /tmp/ccCX7qXW.s:2152   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccCX7qXW.s:2318   .debug_str:00000000000004fe .LASF0
     /tmp/ccCX7qXW.s:2338   .debug_str:000000000000056d .LASF1
     /tmp/ccCX7qXW.s:2302   .debug_str:000000000000049c .LASF2
     /tmp/ccCX7qXW.s:2274   .debug_str:00000000000003eb .LASF4
     /tmp/ccCX7qXW.s:2382   .debug_str:00000000000006d3 .LASF3
     /tmp/ccCX7qXW.s:2178   .debug_str:00000000000000ba .LASF5
     /tmp/ccCX7qXW.s:2342   .debug_str:00000000000005a0 .LASF6
     /tmp/ccCX7qXW.s:2316   .debug_str:00000000000004eb .LASF7
     /tmp/ccCX7qXW.s:2424   .debug_str:00000000000008ee .LASF8
     /tmp/ccCX7qXW.s:2256   .debug_str:000000000000031f .LASF9
     /tmp/ccCX7qXW.s:2360   .debug_str:000000000000060a .LASF10
     /tmp/ccCX7qXW.s:2410   .debug_str:000000000000086d .LASF11
     /tmp/ccCX7qXW.s:2180   .debug_str:00000000000000c1 .LASF12
     /tmp/ccCX7qXW.s:2160   .debug_str:0000000000000050 .LASF13
     /tmp/ccCX7qXW.s:2198   .debug_str:000000000000014a .LASF14
     /tmp/ccCX7qXW.s:2374   .debug_str:0000000000000683 .LASF15
     /tmp/ccCX7qXW.s:2210   .debug_str:00000000000001a7 .LASF16
     /tmp/ccCX7qXW.s:2182   .debug_str:00000000000000d1 .LASF19
     /tmp/ccCX7qXW.s:2458   .debug_str:0000000000000a1c .LASF17
     /tmp/ccCX7qXW.s:2398   .debug_str:000000000000076a .LASF18
     /tmp/ccCX7qXW.s:2300   .debug_str:000000000000048c .LASF29
     /tmp/ccCX7qXW.s:2216   .debug_str:00000000000001df .LASF31
     /tmp/ccCX7qXW.s:2340   .debug_str:0000000000000580 .LASF33
     /tmp/ccCX7qXW.s:2384   .debug_str:00000000000006e5 .LASF20
     /tmp/ccCX7qXW.s:2396   .debug_str:0000000000000749 .LASF22
     /tmp/ccCX7qXW.s:2362   .debug_str:0000000000000619 .LASF21
     /tmp/ccCX7qXW.s:2254   .debug_str:00000000000002fe .LASF23
     /tmp/ccCX7qXW.s:2438   .debug_str:0000000000000976 .LASF24
     /tmp/ccCX7qXW.s:2204   .debug_str:0000000000000168 .LASF26
     /tmp/ccCX7qXW.s:2434   .debug_str:000000000000094d .LASF25
     /tmp/ccCX7qXW.s:2272   .debug_str:00000000000003b8 .LASF27
     /tmp/ccCX7qXW.s:2200   .debug_str:0000000000000156 .LASF81
     /tmp/ccCX7qXW.s:2232   .debug_str:0000000000000252 .LASF126
     /tmp/ccCX7qXW.s:2414   .debug_str:0000000000000885 .LASF128
     /tmp/ccCX7qXW.s:2250   .debug_str:00000000000002eb .LASF28
     /tmp/ccCX7qXW.s:2334   .debug_str:0000000000000561 .LASF30
     /tmp/ccCX7qXW.s:2406   .debug_str:000000000000084c .LASF32
     /tmp/ccCX7qXW.s:2220   .debug_str:00000000000001ed .LASF34
     /tmp/ccCX7qXW.s:2314   .debug_str:00000000000004df .LASF35
     /tmp/ccCX7qXW.s:2292   .debug_str:0000000000000448 .LASF36
     /tmp/ccCX7qXW.s:2228   .debug_str:000000000000023d .LASF37
     /tmp/ccCX7qXW.s:2176   .debug_str:00000000000000a1 .LASF38
     /tmp/ccCX7qXW.s:2174   .debug_str:0000000000000093 .LASF39
     /tmp/ccCX7qXW.s:2258   .debug_str:000000000000032d .LASF40
     /tmp/ccCX7qXW.s:2346   .debug_str:00000000000005bf .LASF41
     /tmp/ccCX7qXW.s:2268   .debug_str:000000000000038a .LASF42
GAS LISTING /tmp/ccCX7qXW.s 			page 10


     /tmp/ccCX7qXW.s:2324   .debug_str:000000000000051b .LASF43
     /tmp/ccCX7qXW.s:2390   .debug_str:0000000000000711 .LASF44
     /tmp/ccCX7qXW.s:2372   .debug_str:0000000000000678 .LASF45
     /tmp/ccCX7qXW.s:2448   .debug_str:00000000000009ba .LASF46
     /tmp/ccCX7qXW.s:2162   .debug_str:0000000000000060 .LASF47
     /tmp/ccCX7qXW.s:2394   .debug_str:0000000000000734 .LASF48
     /tmp/ccCX7qXW.s:2226   .debug_str:0000000000000234 .LASF51
     /tmp/ccCX7qXW.s:2224   .debug_str:000000000000021f .LASF53
     /tmp/ccCX7qXW.s:2308   .debug_str:00000000000004c3 .LASF49
     /tmp/ccCX7qXW.s:2364   .debug_str:0000000000000622 .LASF50
     /tmp/ccCX7qXW.s:2402   .debug_str:0000000000000781 .LASF52
     /tmp/ccCX7qXW.s:2416   .debug_str:00000000000008b3 .LASF54
     /tmp/ccCX7qXW.s:2246   .debug_str:00000000000002bc .LASF55
     /tmp/ccCX7qXW.s:2212   .debug_str:00000000000001bd .LASF56
     /tmp/ccCX7qXW.s:2156   .debug_str:0000000000000023 .LASF57
     /tmp/ccCX7qXW.s:2262   .debug_str:000000000000035e .LASF58
     /tmp/ccCX7qXW.s:2234   .debug_str:000000000000025c .LASF59
     /tmp/ccCX7qXW.s:2188   .debug_str:0000000000000103 .LASF60
     /tmp/ccCX7qXW.s:2266   .debug_str:0000000000000382 .LASF61
     /tmp/ccCX7qXW.s:2236   .debug_str:0000000000000264 .LASF62
     /tmp/ccCX7qXW.s:2320   .debug_str:000000000000050b .LASF63
     /tmp/ccCX7qXW.s:2442   .debug_str:0000000000000991 .LASF64
     /tmp/ccCX7qXW.s:2420   .debug_str:00000000000008d7 .LASF65
     /tmp/ccCX7qXW.s:2244   .debug_str:00000000000002a9 .LASF66
     /tmp/ccCX7qXW.s:2252   .debug_str:00000000000002f8 .LASF67
     /tmp/ccCX7qXW.s:2400   .debug_str:000000000000076f .LASF68
     /tmp/ccCX7qXW.s:2170   .debug_str:000000000000007f .LASF69
     /tmp/ccCX7qXW.s:2464   .debug_str:0000000000000a3d .LASF70
     /tmp/ccCX7qXW.s:2456   .debug_str:0000000000000a11 .LASF71
     /tmp/ccCX7qXW.s:2380   .debug_str:00000000000006bb .LASF72
     /tmp/ccCX7qXW.s:2282   .debug_str:0000000000000412 .LASF73
     /tmp/ccCX7qXW.s:2294   .debug_str:0000000000000461 .LASF74
     /tmp/ccCX7qXW.s:2196   .debug_str:0000000000000140 .LASF75
     /tmp/ccCX7qXW.s:2270   .debug_str:00000000000003a2 .LASF76
     /tmp/ccCX7qXW.s:2240   .debug_str:0000000000000281 .LASF122
     /tmp/ccCX7qXW.s:2260   .debug_str:0000000000000348 .LASF124
     /tmp/ccCX7qXW.s:2166   .debug_str:0000000000000071 .LASF77
     /tmp/ccCX7qXW.s:2356   .debug_str:00000000000005fa .LASF78
     /tmp/ccCX7qXW.s:2222   .debug_str:000000000000020b .LASF151
     /tmp/ccCX7qXW.s:2378   .debug_str:000000000000069f .LASF152
     /tmp/ccCX7qXW.s:2208   .debug_str:000000000000019f .LASF79
     /tmp/ccCX7qXW.s:2328   .debug_str:000000000000052d .LASF80
     /tmp/ccCX7qXW.s:2218   .debug_str:00000000000001e8 .LASF82
     /tmp/ccCX7qXW.s:2306   .debug_str:00000000000004be .LASF83
     /tmp/ccCX7qXW.s:2352   .debug_str:00000000000005ea .LASF84
     /tmp/ccCX7qXW.s:2164   .debug_str:0000000000000069 .LASF85
     /tmp/ccCX7qXW.s:2230   .debug_str:0000000000000249 .LASF86
     /tmp/ccCX7qXW.s:2440   .debug_str:0000000000000989 .LASF87
     /tmp/ccCX7qXW.s:2392   .debug_str:000000000000072b .LASF88
     /tmp/ccCX7qXW.s:2370   .debug_str:0000000000000668 .LASF89
     /tmp/ccCX7qXW.s:2288   .debug_str:000000000000042e .LASF90
     /tmp/ccCX7qXW.s:2248   .debug_str:00000000000002c4 .LASF91
     /tmp/ccCX7qXW.s:2368   .debug_str:0000000000000663 .LASF153
     /tmp/ccCX7qXW.s:2186   .debug_str:00000000000000e2 .LASF92
     /tmp/ccCX7qXW.s:2336   .debug_str:0000000000000567 .LASF93
     /tmp/ccCX7qXW.s:2460   .debug_str:0000000000000a21 .LASF94
     /tmp/ccCX7qXW.s:2296   .debug_str:0000000000000479 .LASF95
GAS LISTING /tmp/ccCX7qXW.s 			page 11


     /tmp/ccCX7qXW.s:2330   .debug_str:0000000000000545 .LASF96
     /tmp/ccCX7qXW.s:2462   .debug_str:0000000000000a35 .LASF97
     /tmp/ccCX7qXW.s:2192   .debug_str:0000000000000124 .LASF98
     /tmp/ccCX7qXW.s:2286   .debug_str:0000000000000425 .LASF139
     /tmp/ccCX7qXW.s:2430   .debug_str:0000000000000920 .LASF141
     /tmp/ccCX7qXW.s:2312   .debug_str:00000000000004d6 .LASF99
     /tmp/ccCX7qXW.s:2154   .debug_str:0000000000000000 .LASF100
     /tmp/ccCX7qXW.s:2376   .debug_str:0000000000000699 .LASF101
     /tmp/ccCX7qXW.s:2304   .debug_str:00000000000004aa .LASF102
     /tmp/ccCX7qXW.s:2322   .debug_str:0000000000000512 .LASF103
     /tmp/ccCX7qXW.s:2426   .debug_str:00000000000008fe .LASF104
     /tmp/ccCX7qXW.s:2190   .debug_str:0000000000000117 .LASF105
     /tmp/ccCX7qXW.s:2422   .debug_str:00000000000008de .LASF106
     /tmp/ccCX7qXW.s:2388   .debug_str:0000000000000701 .LASF107
     /tmp/ccCX7qXW.s:2418   .debug_str:00000000000008c6 .LASF108
     /tmp/ccCX7qXW.s:2408   .debug_str:000000000000085d .LASF109
     /tmp/ccCX7qXW.s:2264   .debug_str:0000000000000372 .LASF110
     /tmp/ccCX7qXW.s:2278   .debug_str:00000000000003fa .LASF111
     /tmp/ccCX7qXW.s:2446   .debug_str:00000000000009a9 .LASF112
     /tmp/ccCX7qXW.s:2350   .debug_str:00000000000005cf .LASF113
     /tmp/ccCX7qXW.s:2432   .debug_str:0000000000000938 .LASF114
     /tmp/ccCX7qXW.s:2280   .debug_str:000000000000040d .LASF115
     /tmp/ccCX7qXW.s:2326   .debug_str:0000000000000528 .LASF116
     /tmp/ccCX7qXW.s:2454   .debug_str:0000000000000a0b .LASF117
     /tmp/ccCX7qXW.s:2284   .debug_str:000000000000041d .LASF118
     /tmp/ccCX7qXW.s:2194   .debug_str:000000000000013a .LASF119
     /tmp/ccCX7qXW.s:2298   .debug_str:000000000000047e .LASF120
     /tmp/ccCX7qXW.s:2172   .debug_str:0000000000000085 .LASF121
     /tmp/ccCX7qXW.s:2436   .debug_str:0000000000000968 .LASF123
     /tmp/ccCX7qXW.s:2452   .debug_str:00000000000009df .LASF125
     /tmp/ccCX7qXW.s:2344   .debug_str:00000000000005b3 .LASF127
     /tmp/ccCX7qXW.s:2366   .debug_str:0000000000000635 .LASF129
     /tmp/ccCX7qXW.s:2412   .debug_str:000000000000087c .LASF130
     /tmp/ccCX7qXW.s:2310   .debug_str:00000000000004ca .LASF154
     /tmp/ccCX7qXW.s:2358   .debug_str:0000000000000604 .LASF131
     /tmp/ccCX7qXW.s:2354   .debug_str:00000000000005f2 .LASF132
     /tmp/ccCX7qXW.s:2276   .debug_str:00000000000003f2 .LASF133
     /tmp/ccCX7qXW.s:2332   .debug_str:0000000000000558 .LASF134
     /tmp/ccCX7qXW.s:2348   .debug_str:00000000000005ca .LASF135
     /tmp/ccCX7qXW.s:2184   .debug_str:00000000000000dd .LASF136
     /tmp/ccCX7qXW.s:43     .text:0000000000000028 .LFB23
     /tmp/ccCX7qXW.s:136    .text:00000000000000c0 .LFE23
     /tmp/ccCX7qXW.s:2428   .debug_str:0000000000000915 .LASF137
     /tmp/ccCX7qXW.s:2095   .debug_loc:0000000000000000 .LLST1
     /tmp/ccCX7qXW.s:2238   .debug_str:0000000000000278 .LASF138
     /tmp/ccCX7qXW.s:76     .text:0000000000000068 .LBB6
     /tmp/ccCX7qXW.s:85     .text:0000000000000070 .LBE6
     /tmp/ccCX7qXW.s:2102   .debug_loc:0000000000000023 .LLST2
     /tmp/ccCX7qXW.s:2110   .debug_loc:0000000000000047 .LLST3
     /tmp/ccCX7qXW.s:98     .text:0000000000000090 .LBB8
     /tmp/ccCX7qXW.s:112    .text:0000000000000098 .LBE8
     /tmp/ccCX7qXW.s:2117   .debug_loc:000000000000006a .LLST4
     /tmp/ccCX7qXW.s:57     .text:0000000000000040 .LVL2
     /tmp/ccCX7qXW.s:61     .text:0000000000000048 .LVL3
     /tmp/ccCX7qXW.s:69     .text:000000000000005c .LVL4
     /tmp/ccCX7qXW.s:89     .text:0000000000000078 .LVL7
     /tmp/ccCX7qXW.s:96     .text:0000000000000090 .LVL8
GAS LISTING /tmp/ccCX7qXW.s 			page 12


     /tmp/ccCX7qXW.s:117    .text:00000000000000a0 .LVL10
     /tmp/ccCX7qXW.s:123    .text:00000000000000ac .LVL11
     /tmp/ccCX7qXW.s:2206   .debug_str:0000000000000193 .LASF140
     /tmp/ccCX7qXW.s:2386   .debug_str:00000000000006ef .LASF142
     /tmp/ccCX7qXW.s:10     .text:0000000000000000 .LFB22
     /tmp/ccCX7qXW.s:37     .text:0000000000000028 .LFE22
     /tmp/ccCX7qXW.s:2125   .debug_loc:000000000000008e .LLST0
     /tmp/ccCX7qXW.s:26     .text:0000000000000018 .LVL1
     /tmp/ccCX7qXW.s:2444   .debug_str:00000000000009a4 .LASF155
     /tmp/ccCX7qXW.s:2202   .debug_str:0000000000000163 .LASF143
     /tmp/ccCX7qXW.s:2158   .debug_str:000000000000002b .LASF144
     /tmp/ccCX7qXW.s:2214   .debug_str:00000000000001d1 .LASF146
     /tmp/ccCX7qXW.s:2450   .debug_str:00000000000009d2 .LASF145
     /tmp/ccCX7qXW.s:2168   .debug_str:0000000000000076 .LASF147
     /tmp/ccCX7qXW.s:75     .text:0000000000000068 .LVL5
     /tmp/ccCX7qXW.s:83     .text:0000000000000070 .LVL6
     /tmp/ccCX7qXW.s:108    .text:0000000000000098 .LVL9
     /tmp/ccCX7qXW.s:14     .text:0000000000000000 .LVL0
     /tmp/ccCX7qXW.s:152    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z8userMainv
_ZN15MemoryAllocator8initHeapEv
_ZN5Riscv16setupTrapHandlerEv
_ZN7KThread12createThreadEPFvPvES0_S0_
_ZN7KThread7runningE
_ZN5Riscv11setUserModeEv
_Z13thread_createPP7KThreadPFvPvES2_
_ZN9Scheduler7isEmptyEv
_ZN7KThread5yieldEv
